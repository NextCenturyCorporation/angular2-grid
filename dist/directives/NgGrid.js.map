{"version":3,"file":"NgGrid.js","sourceRoot":"","sources":["../../src/directives/NgGrid.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,wBAAwB,EAAgC,eAAe,EAA8B,MAAM,EAAE,MAAM,eAAe,CAAC;AAC3L,OAAO,EAA4B,SAAS,IAAI,mBAAmB,EAAE,MAAM,MAAM,CAAC;AAElF,OAAO,EAAE,iBAAiB,EAAE,MAAM,iCAAiC,CAAC;AACpE,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAIvD;IA8IC,cAAc;IACd,gBACS,QAAyB,EACzB,KAAiB,EACjB,SAAmB,EACnB,wBAAkD;QAHlD,aAAQ,GAAR,QAAQ,CAAiB;QACzB,UAAK,GAAL,KAAK,CAAY;QACjB,cAAS,GAAT,SAAS,CAAU;QACnB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAhI3D,iBAAiB;QACA,gBAAW,GAA6B,IAAI,YAAY,EAAc,CAAC;QACvE,WAAM,GAA6B,IAAI,YAAY,EAAc,CAAC;QAClE,eAAU,GAA6B,IAAI,YAAY,EAAc,CAAC;QACtE,kBAAa,GAA6B,IAAI,YAAY,EAAc,CAAC;QACzE,aAAQ,GAA6B,IAAI,YAAY,EAAc,CAAC;QACpE,iBAAY,GAA6B,IAAI,YAAY,EAAc,CAAC;QACxE,iBAAY,GAAoC,IAAI,YAAY,EAAqB,CAAC;QAEvG,mBAAmB;QACZ,aAAQ,GAAW,GAAG,CAAC;QACvB,cAAS,GAAW,GAAG,CAAC;QACxB,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,CAAC,CAAC;QACpB,cAAS,GAAW,EAAE,CAAC;QACvB,gBAAW,GAAW,EAAE,CAAC;QACzB,iBAAY,GAAW,EAAE,CAAC;QAC1B,eAAU,GAAW,EAAE,CAAC;QACxB,iBAAY,GAAW,CAAC,CAAC;QACzB,eAAU,GAAY,KAAK,CAAC;QAC5B,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,IAAI,CAAC;QAC1B,iBAAY,GAAY,IAAI,CAAC;QAC7B,eAAU,GAAY,IAAI,CAAC;QAC3B,YAAO,GAAW,IAAI,CAAC;QACvB,aAAQ,GAAW,GAAG,CAAC;QACvB,cAAS,GAAW,GAAG,CAAC;QACxB,qBAAgB,GAAa,MAAM,CAAC,+BAA+B,CAAC;QAE3E,oBAAoB;QACZ,WAAM,GAA4B,IAAI,GAAG,EAAsB,CAAC;QAChE,kBAAa,GAAe,IAAI,CAAC;QACjC,kBAAa,GAAe,IAAI,CAAC;QACjC,qBAAgB,GAAW,IAAI,CAAC;QAChC,iBAAY,GAAgB,IAAI,GAAG,EAAU,CAAC;QAC9C,aAAQ,GAAW,CAAC,CAAC;QACrB,aAAQ,GAAW,CAAC,CAAC;QACrB,iBAAY,GAAW,CAAC,CAAC;QACzB,iBAAY,GAAW,CAAC,CAAC;QACzB,eAAU,GAAsB,IAAI,CAAC;QACrC,oBAAe,GAAoC,IAAI,CAAC;QACxD,eAAU,GAAY,KAAK,CAAC;QAC5B,gBAAW,GAAY,KAAK,CAAC;QAE7B,eAAU,GAAY,KAAK,CAAC;QAC5B,mBAAc,GAAY,KAAK,CAAC;QAEhC,eAAU,GAAY,KAAK,CAAC;QAC5B,gBAAW,GAAY,KAAK,CAAC;QAC7B,mBAAc,GAAY,KAAK,CAAC;QAChC,oBAAe,GAAY,KAAK,CAAC;QACjC,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAY,KAAK,CAAC;QAC5B,iBAAY,GAAY,KAAK,CAAC;QAC9B,kCAA6B,GAAY,KAAK,CAAC;QAC/C,sBAAiB,GAAyB,SAAS,CAAC;QACpD,2BAAsB,GAAyB,SAAS,CAAC;QACzD,kBAAa,GAAY,KAAK,CAAC;QAE/B,gBAAW,GAAW,CAAC,CAAC;QAWxB,mBAAc,GAAmB,EAAE,CAAC;QAEpC,qBAAgB,GAAY,KAAK,CAAC;QAgC1C,yCAAyC;QACjC,YAAO,GAAG,MAAM,CAAC,oBAAoB,CAAC;QAwB7C,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACzB,CAAC;IAtBD,sBAAI,0BAAM;QADV,8BAA8B;aAC9B,UAAW,CAAe;YACzB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;gBACvC,OAAO;aACP;YAED,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAElB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;gBACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;aACzD;YAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;;;OAAA;IAYD,iBAAiB;IACV,yBAAQ,GAAf;QACC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QACvE,IAAI,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACrG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEM,4BAAW,GAAlB;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEM,gCAAe,GAAtB;QACC,IAAM,GAAG,GAAW,YAAY,CAAC,YAAY,EAAE,CAAC;QAEhD,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACzB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;SAC9B;QAED,OAAO,GAAG,CAAC;IACZ,CAAC;IAEM,0BAAS,GAAhB,UAAiB,MAAoB;QAArC,iBA+LC;QA9LA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,gBAAgB,GAAG,KAAK,CAAC;QAC7B,KAAK,IAAM,CAAC,IAAI,MAAM,EAAE;YACvB,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;gBAAE,SAAS;YAE7B,IAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACtB,IAAM,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAE5C,0CAA0C;YAC1C,QAAQ,CAAC,EAAE;gBACV,KAAK,SAAS;oBACb,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACrB,MAAM;gBACP,KAAK,WAAW;oBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACpC,MAAM;gBACP,KAAK,YAAY;oBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACrC,MAAM;gBACP,KAAK,YAAY;oBAChB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACpC,MAAM;gBACP,KAAK,aAAa;oBACjB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACtC,MAAM;gBACP,KAAK,WAAW;oBACf,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACrC,MAAM;gBACP,KAAK,WAAW;oBACf,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACvC,MAAM;gBACP,KAAK,UAAU;oBACd,gBAAgB,GAAG,gBAAgB,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC;oBAChE,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBACxC,MAAM;gBACP,KAAK,UAAU;oBACd,gBAAgB,GAAG,gBAAgB,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC;oBAChE,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBACxC,MAAM;gBACP,KAAK,cAAc;oBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACxC,MAAM;gBACP,KAAK,cAAc;oBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACxC,MAAM;gBACP,KAAK,UAAU;oBACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACnC,MAAM;gBACP,KAAK,UAAU;oBACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACnC,MAAM;gBACP,KAAK,YAAY;oBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACrC,MAAM;gBACP,KAAK,WAAW;oBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBACpC,MAAM;gBACP,KAAK,cAAc;oBAClB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACtC,MAAM;gBACP,KAAK,SAAS;oBACb,IAAI,IAAI,CAAC,OAAO,KAAK,GAAG,EAAE;wBACzB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;wBACnB,IAAI,CAAC,YAAY,EAAE,CAAC;qBACpB;oBACD,MAAM;gBACP,KAAK,aAAa;oBACjB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACrC,MAAM;gBACP,KAAK,gBAAgB;oBACpB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzC,MAAM;gBACP,KAAK,YAAY;oBAChB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBACrC,MAAM;gBACP,KAAK,iBAAiB;oBACrB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,CAAC;oBACjD,MAAM;gBACP,KAAK,kBAAkB;oBACtB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC1C,MAAM;gBACP,KAAK,mBAAmB;oBACvB,IAAI,CAAC,gBAAgB,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;oBACtH,MAAM;gBACP,KAAK,0BAA0B;oBAC9B,IAAI,CAAC,6BAA6B,GAAG,CAAC,CAAC,GAAG,CAAC;oBAC3C,MAAM;gBACP,KAAK,6BAA6B;oBACjC,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;oBAC7B,MAAM;gBACP,KAAK,kCAAkC;oBACtC,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;oBAClC,MAAM;gBACP,KAAK,eAAe;oBACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC;oBAC3B,MAAM;aACP;SACD;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,IAAI,IAAI,CAAC,OAAO,KAAK,EAAE,EAAE;YACxE,sCAAsC;YACtC,OAAO,CAAC,IAAI,CAAC,0DAA0D,CAAC,CAAC;YACzE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC3B;QAED,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,EAAE;YACzC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACxB;aAAM;YACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACzB;QAED,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAE;YACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;SAC5D;QAED,IAAI,IAAI,CAAC,sBAAsB,KAAK,SAAS,EAAE;YAC9C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACjE;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACxB,IAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE/C,IAAI,IAAI,CAAC,QAAQ,KAAK,UAAU,EAAE;gBACjC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;gBAC3B,gBAAgB,GAAG,IAAI,CAAC;aACxB;SACD;QAED,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,eAAe,EAAE;YAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC5C;aAAM;YACN,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;gBACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;aACnD;iBAAM;gBACN,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC5B;SACD;QAED,IAAI,gBAAgB,EAAE;YACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,EAAE,yCAAyC;gBACtF,QAAQ,IAAI,CAAC,OAAO,EAAE;oBACrB,KAAK,MAAM,CAAC;oBACZ,KAAK,OAAO;wBACX,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBAClB,MAAM;oBACP,KAAK,IAAI,CAAC;oBACV,KAAK,MAAM,CAAC;oBACZ;wBACC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBAClB,MAAM;iBACP;aACD;YAED,IAAI,CAAC,8BAA8B,EAAE,CAAC;SACtC;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/C,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAEjD,IAAI,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ;YAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnF,IAAI,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS;YAAE,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAExF,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnH,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAEvH,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACxE,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAExE,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAgB;YACpC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAgB;YACpC,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAEM,gCAAe,GAAtB,UAAuB,MAAc;QACpC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACnF,CAAC;IAEM,4BAAW,GAAlB,UAAmB,MAAc;QAChC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC3E,CAAC;IAEM,0BAAS,GAAhB;QACC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACzB,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEhD,IAAI,OAAO,IAAI,IAAI,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAE5B,OAAO,IAAI,CAAC;aACZ;SACD;QAED,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,2BAAU,GAAjB,UAAkB,OAAiB;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAChG,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QACjG,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAClG,CAAC;IAEM,2BAAU,GAAjB;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,4BAAW,GAAlB;QACC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IACzB,CAAC;IAEM,6BAAY,GAAnB;QACC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC1B,CAAC;IAEM,8BAAa,GAApB;QACC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEM,wBAAO,GAAd,UAAe,MAAkB;QAAjC,iBAwBC;QAvBA,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;YACjF,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC/B;QAED,IAAI,MAAM,CAAC,GAAG,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACvD,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;SACpC;QAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;YAC1B,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,MAAM,CAAC,cAAc,EAAE,CAAC;YAExB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IAEJ,CAAC;IAEM,2BAAU,GAAjB,UAAkB,MAAkB;QAApC,iBAYC;QAXA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAE7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE/B,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;QAE5B,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;YAC1B,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAgB,IAAK,OAAA,IAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC;YAClE,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,2BAAU,GAAjB,UAAkB,MAAkB;QAApC,iBAQC;QAPA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;YAC1B,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,MAAM,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,+BAAc,GAArB;QAAA,iBAYC;QAXA,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,OAAO,CAAC,UAAC,OAAmB;gBACtD,UAAU,CAAC;oBACV,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC9B,OAAO,EAAE,CAAC;gBACX,CAAC,EAAE,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACH;QAED,OAAO,IAAI,CAAC,eAAe,CAAC;IAC7B,CAAC;IAEM,8BAAa,GAApB;QACC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEM,mCAAkB,GAAzB,UAA0B,CAAM;QAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,IAAI,CAAC,cAAc,EAAE;YACxB,IAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAClD,IAAI,IAAI,CAAC,QAAQ,KAAK,aAAa,EAAE;gBACpC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;gBAC9B,IAAI,CAAC,8BAA8B,EAAE,CAAC;gBACtC,IAAI,CAAC,YAAY,EAAE,CAAC;aACpB;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;gBACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAE5C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAgB;oBACpC,IAAI,CAAC,eAAe,EAAE,CAAC;gBACxB,CAAC,CAAC,CAAC;aACH;SACD;aAAM,IAAI,IAAI,CAAC,WAAW,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAgB;gBACpC,IAAI,CAAC,eAAe,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;SACH;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAEM,sCAAqB,GAA5B,UAA6B,CAA0B;QACtD,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAEjD,IAAI,IAAI,IAAI,IAAI;YAAE,OAAO;QAEzB,IAAM,eAAe,GAAW,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAElD,IAAI,IAAI,CAAC,YAAY,IAAI,eAAe,EAAE;YACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YAExC,CAAC,CAAC,cAAc,EAAE,CAAC;SACnB;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;YAE9F,CAAC,CAAC,cAAc,EAAE,CAAC;SACnB;IACF,CAAC;IAEM,oCAAmB,GAA1B,UAA2B,CAAkC;QAC5D,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,EAAE;YAChD,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,YAAY,EAAE,CAAC;SACpB;IACF,CAAC;IAEM,sCAAqB,GAA5B,UAA6B,CAAkC;QAC9D,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,OAAO;SACP;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,OAAO;SACP;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACd;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAChB;aAAM;YACN,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAEjD,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACpB;SACD;IACF,CAAC;IAED,kBAAkB;IACV,4CAA2B,GAAnC;QACC,QAAQ,IAAI,CAAC,OAAO,EAAE;YACrB,KAAK,IAAI,CAAC;YACV,KAAK,MAAM,CAAC;YACZ;gBACC,OAAO,UAAU,CAAC;YACnB,KAAK,MAAM,CAAC;YACZ,KAAK,OAAO;gBACX,OAAO,YAAY,CAAC;SACrB;IACF,CAAC;IACO,+CAA8B,GAAtC;QAAA,iBA0BC;QAzBA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAgB;YACpC,IAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACnC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAE5B,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,KAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,IAAI,KAAI,CAAC,QAAQ,EAAE;gBAChI,OAAO;aACP;YAED,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAE3B,IAAI,KAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,EAAE;gBAChD,IAAI,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACnB;iBAAM,IAAI,KAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,EAAE;gBACvD,IAAI,CAAC,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACnB;YAED,IAAI,KAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;gBAChF,IAAM,WAAW,GAAG,KAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBACrD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;aAClC;YAED,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,mCAAkB,GAA1B;QACC,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBAC/C,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;gBACtE,IAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;gBAEhF,IAAI,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC;gBACtD,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;gBACjD,IAAI,QAAQ,GAAG,CAAC;oBAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAE3C;SACD;QAED,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC1E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SACzF;IACF,CAAC;IAEO,oCAAmB,GAA3B;QACC,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBAC/C,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;gBACtE,IAAI,SAAS,SAAQ,CAAC;gBAEtB,IAAI,IAAI,CAAC,6BAA6B,EAAE;oBACvC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC;iBACpE;qBAAM;oBACN,SAAS,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;iBACpE;gBAED,IAAI,SAAS,GAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBAClF,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,CAAC;oBAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;aAE9C;SACD;QAED,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC5E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC3F;IACF,CAAC;IAEO,6BAAY,GAApB;QACC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,cAAc;YAAE,OAAO;QAEtD,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;SACnD;aAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE;YACvD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;SACnD;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;YACtD,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;aACnD;iBAAM,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;aACnD;SACD;IACF,CAAC;IAEO,8BAAa,GAArB,UAAsB,OAAY;QAAlC,iBAMC;QALA,OAAO,CAAC,gBAAgB,CAAC,UAAC,MAAW,IAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/F,OAAO,CAAC,kBAAkB,CAAC,UAAC,MAAW,IAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QACjG,OAAO,CAAC,kBAAkB,CAAC,UAAC,MAAW,IAAO,OAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAElF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEO,6BAAY,GAApB,UAAqB,CAAM;QAC1B,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,aAAa;YAAE,OAAO;QAEtD,QAAQ;QACR,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE5C,IAAI,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SAC/C;QAED,eAAe;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,SAAS;QACT,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;IACzC,CAAC;IAEO,2BAAU,GAAlB,UAAmB,CAAM;QACxB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,aAAa;YAAE,OAAO;QAEpD,iBAAiB;QACjB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE5C,IAAI,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SAC/C;QAED,eAAe;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,SAAS;QACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;QAEtC,OAAO;QACP,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;SAChB;IACF,CAAC;IAEO,yBAAQ,GAAhB;QACC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;IAC1F,CAAC;IAEO,2BAAU,GAAlB;QACC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IAC3E,CAAC;IAEO,sBAAK,GAAb,UAAc,CAAM;QACnB,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAE7B,IAAI,MAAM,CAAC,YAAY,EAAE;YACxB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE;gBAChC,MAAM,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC;aAC9B;iBAAM,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE;gBACjD,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE,CAAC;aACxC;SACD;aAAM,IAAK,QAAgB,CAAC,SAAS,EAAE;YACtC,QAAgB,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACpC;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpD,IAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAElD,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACrD,IAAI,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtD,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAE1C,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAE/C,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;YAC1C,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SAC/C;QAED,IAAI,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,EAAE;YAC/D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7D,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAEvD,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC/D,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBACvC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACjC;SACD;QAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC3C;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAEO,wBAAO,GAAf,UAAgB,CAAM;QACrB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAAE,OAAO;SAAE;QAEjC,IAAI,MAAM,CAAC,YAAY,EAAE;YACxB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE;gBAChC,MAAM,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC;aAC9B;iBAAM,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE;gBACjD,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE,CAAC;aACxC;SACD;aAAM,IAAK,QAAgB,CAAC,SAAS,EAAE;YACtC,QAAgB,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACpC;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjD,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACpD,IAAM,SAAS,GAAG;YACjB,IAAI,EAAE,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK;YACnC,GAAG,EAAE,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM;SAClC,CAAC;QAEF,IAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxD,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAE5D,6DAA6D;QAC7D,IAAI,IAAI,GAAG,WAAW;YACrB,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;YACpC,CAAC,CAAC,UAAU;gBACX,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;gBACtC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QACnB,IAAI,IAAI,GAAG,YAAY;YACtB,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC,SAAS;gBACV,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;gBACpC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;QAEpB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ;YACvB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QACtB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS;YACxB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ;YACrC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QACpC,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS;YACtC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAErC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACxB,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;QAEvB,IAAI,UAAU;YACb,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,IAAI,SAAS;YACZ,IAAI,GAAG,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC;QAE7B,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACnD,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACtD,IAAM,iBAAiB,GAAG;YACzB,GAAG,EAAE,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;YAC9B,GAAG,EAAE,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;SAC9B,CAAC;QACF,IAAM,SAAS,GAAuB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QAElE,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC;YACxC,SAAS,CAAC,GAAG,GAAG,iBAAiB,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;QACpD,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC;YACzC,SAAS,CAAC,GAAG,GAAG,iBAAiB,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;QAEpD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC;YAC9C,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAExD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC;YAC9C,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAExD,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAElD,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE;YAC3D,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/D,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YACzD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACtD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC/D,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAC7C,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;aACvC;SACD;QAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC3C;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;IACpC,CAAC;IAEO,0BAAS,GAAjB,UAAkB,CAAM;QACvB,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAE7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QAErD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEpC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEzC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAE/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;SAClB;IACF,CAAC;IAEO,4BAAW,GAAnB,UAAoB,CAAM;QACzB,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAE7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEpC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE3C,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAE/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEO,2BAAU,GAAlB;QACC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IACzB,CAAC;IAEO,6BAAY,GAApB;QACC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEO,mCAAkB,GAA1B,UAA2B,KAAa,EAAE,MAAc;QACvD,KAAK,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAC5C,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QAE7C,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7G,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAE/G,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;YAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9F,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;YAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9F,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;IAC/B,CAAC;IAEO,uCAAsB,GAA9B,UAA+B,IAAY,EAAE,GAAW;QACvD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACnG,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAEnG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,KAAA,EAAE,GAAG,KAAA,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9E,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,KAAA,EAAE,GAAG,KAAA,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9E,OAAO,EAAE,GAAG,KAAA,EAAE,GAAG,KAAA,EAAE,CAAC;IACrB,CAAC;IAEO,kCAAiB,GAAzB,UAA0B,GAAuB,EAAE,IAAoB;QACtE,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAEjD,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QAE9D,OAAO,SAAS,CAAC,IAAI,CAAC,UAAC,CAAa;YACnC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,+BAAc,GAAtB,UAAuB,GAAuB,EAAE,IAAoB;QAApE,iBAmCC;QAlCA,IAAI,IAAI,CAAC,aAAa;YAAE,OAAO,EAAE,CAAC;QAElC,IAAM,OAAO,GAAiB,EAAE,CAAC;QAEjC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;YAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SAAE;QAC9B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;YAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SAAE;QAE9B,IAAM,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC;QACxB,IAAM,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;QAClC,IAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC;QACvB,IAAM,SAAS,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;QAEnC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,MAAc;YACxC,IAAM,IAAI,GAAe,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEjD,IAAI,CAAC,IAAI,EAAE;gBACV,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACjC,OAAO;aACP;YAED,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;YAC7B,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3C,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC;YAC5B,IAAM,aAAa,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YAE5C,IAAM,aAAa,GAAG,OAAO,GAAG,YAAY,IAAI,WAAW,GAAG,QAAQ,CAAC;YACvE,IAAM,UAAU,GAAG,MAAM,GAAG,aAAa,IAAI,UAAU,GAAG,SAAS,CAAC;YAEpE,IAAI,aAAa,IAAI,UAAU,EAAE;gBAChC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnB;QACF,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IAChB,CAAC;IAEO,mCAAkB,GAA1B,UAA2B,GAAuB,EAAE,IAAoB;QACvE,IAAM,UAAU,GAAiB,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAChE,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAAE,OAAO;SAAE;QAExC,KAAwB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;YAA7B,IAAM,SAAS,mBAAA;YACnB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YAEhC,IAAM,QAAQ,GAAmB,SAAS,CAAC,OAAO,EAAE,CAAC;YACrD,IAAM,OAAO,GAAuB,SAAS,CAAC,eAAe,EAAE,CAAC;YAChE,IAAM,UAAU,GAAuB,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;YAE9E,IAAI,IAAI,CAAC,sBAAsB,KAAK,UAAU,EAAE;gBAC/C,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;gBAElC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE;oBACjD,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;oBAClC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC;iBACnB;aACD;iBAAM,IAAI,IAAI,CAAC,sBAAsB,KAAK,YAAY,EAAE;gBACxD,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;gBAElC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE;oBACjD,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC;oBACnB,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;iBAClC;aACD;YAED,SAAS,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAEtC,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YAC3B,SAAS,CAAC,cAAc,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAEO,6BAAY,GAApB,UAAqB,GAAwB,EAAE,IAAqB;QAApE,iBAoHC;QAnHA,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;QAC5B,IAAI,IAAI,CAAC,aAAa;YAAE,OAAO;QAC/B,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI;YAAE,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAE5F,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YAC3D,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SACpC;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YAClE,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;YAC3C,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SACpC;QAED,IAAI,WAAW,GAAiB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,MAAc,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAvB,CAAuB,CAAC,CAAC;QAE3G,QAAQ,IAAI,CAAC,OAAO,EAAE;YACrB,KAAK,IAAI,CAAC;YACV,KAAK,MAAM;gBACV,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;gBACzE,IAAM,kBAAkB,GAAwB,IAAI,GAAG,EAAkB,CAAC;gBAE1E,KAAmB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;oBAAzB,IAAM,IAAI,oBAAA;oBACd,IAAI,IAAI,CAAC,OAAO;wBAAE,SAAS;oBAE3B,IAAM,QAAQ,GAAmB,IAAI,CAAC,OAAO,EAAE,CAAC;oBAChD,IAAM,OAAO,GAAuB,IAAI,CAAC,eAAe,EAAE,CAAC;oBAE3D,IAAI,gBAAgB,GAAW,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAExE,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC5C,IAAM,kBAAkB,GAAG,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;wBACxE,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;qBAClE;oBAED,IAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC;oBAC5B,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;oBAE1C,IAAI,GAAG,IAAI,IAAI,EAAE;wBAChB,IAAM,aAAa,GAAG,QAAQ,GAAG,GAAG,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;wBAEzE,IAAI,aAAa,EAAE,EAAW,iDAAiD;4BAC9E,IAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,gBAAgB,CAAC,CAAC;4BAEjE,IAAI,CAAC,aAAa,EAAE,EAAmD,mCAAmC;gCACzG,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAG,oCAAoC;6BACvG;yBACD;qBACD;oBAED,IAAM,MAAM,GAAuB,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC;oBAE/E,oCAAoC;oBACpC,IAAI,gBAAgB,KAAK,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,EAAE,oDAAoD;wBACtI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;wBAE3B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;wBAE7B,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;qBACtB;oBAED,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC5C,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,6CAA6C;qBACrH;iBACD;gBACD,MAAM;YACP,KAAK,MAAM,CAAC;YACZ,KAAK,OAAO;gBACX,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,6BAA6B,CAAC,CAAC;gBAC3E,IAAM,kBAAkB,GAAwB,IAAI,GAAG,EAAkB,CAAC;gBAE1E,KAAmB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;oBAAzB,IAAM,IAAI,oBAAA;oBACd,IAAM,QAAQ,GAAmB,IAAI,CAAC,OAAO,EAAE,CAAC;oBAChD,IAAM,OAAO,GAAuB,IAAI,CAAC,eAAe,EAAE,CAAC;oBAE3D,IAAI,mBAAmB,GAAW,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAE3E,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC5C,IAAM,kBAAkB,GAAW,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;wBAChF,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;qBACxE;oBAED,IAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC;oBAC3B,IAAM,SAAS,GAAG,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;oBAE3C,IAAI,GAAG,IAAI,IAAI,EAAE;wBAChB,IAAM,UAAU,GAAG,SAAS,GAAG,GAAG,CAAC,GAAG,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;wBAEtE,IAAI,UAAU,EAAE,EAAW,8CAA8C;4BACxE,IAAM,cAAc,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,mBAAmB,CAAC,CAAC;4BAErE,IAAI,CAAC,cAAc,EAAE,EAAuD,qCAAqC;gCAChH,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,gDAAgD;6BACxH;yBACD;qBACD;oBAED,IAAM,MAAM,GAAuB,EAAE,GAAG,EAAE,mBAAmB,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC;oBAElF,IAAI,mBAAmB,KAAK,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,EAAE,oDAAoD;wBACzI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;wBAE3B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;wBAE7B,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;qBACtB;oBAED,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC5C,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,mBAAmB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,6CAA6C;qBACxH;iBACD;gBACD,MAAM;YACP;gBACC,MAAM;SACP;IACF,CAAC;IAEO,iCAAgB,GAAxB,UAAyB,GAAuB,EAAE,IAAoB;QACrE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC;YAAE,OAAO,GAAG,CAAC;QAEnD,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrC,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACtC,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrC,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACtC,IAAM,MAAM,GAAG;YACd,GAAG,EAAE,GAAG,CAAC,GAAG;YACZ,GAAG,EAAE,GAAG,CAAC,GAAG;SACZ,CAAC;QAEF,IAAI,cAAc,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,cAAc,EAAE;YACrD,uFAAuF;YACvF,MAAM,CAAC,GAAG,GAAG,WAAW,GAAG,CAAC,CAAC;YAC7B,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;SACf;aAAM,IAAK,cAAc,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,cAAc,EAAE;YAC7D,yFAAyF;YACzF,MAAM,CAAC,GAAG,GAAG,WAAW,GAAG,CAAC,CAAC;YAC7B,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,iBAAiB,KAAK,UAAU,EAAE;YACjD,IAAI,cAAc,KAAK,CAAC,EAAE;gBACzB,iDAAiD;gBACjD,wDAAwD;gBACxD,IAAM,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC3E,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;aAChE;iBAAM;gBACN,4FAA4F;gBAC5F,8EAA8E;gBAC9E,OAAO,MAAM,CAAC,GAAG,IAAI,WAAW,GAAI;oBACnC,uEAAuE;oBACvE,IAAM,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC3E,IAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;oBAEnE,iDAAiD;oBACjD,IAAI,cAAc,GAAG,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE;wBACvC,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;wBACrB,MAAM;qBACN;oBAED,mFAAmF;oBACnF,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAArB,CAAqB,CAAC,CAAC,CAAC,CAAC;oBAC9G,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;iBACf;aACD;SACD;aAAM,IAAI,IAAI,CAAC,iBAAiB,KAAK,YAAY,EAAE;YACnD,IAAI,cAAc,KAAK,CAAC,EAAE;gBACzB,gDAAgD;gBAChD,wDAAwD;gBACxD,IAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC7E,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;aAChE;iBAAM;gBACN,yFAAyF;gBACzF,+EAA+E;gBAC/E,OAAO,MAAM,CAAC,GAAG,IAAI,WAAW,GAAI;oBACnC,IAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC7E,IAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;oBAEnE,oDAAoD;oBACpD,IAAI,cAAc,GAAG,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE;wBACvC,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;wBACrB,MAAM;qBACN;oBAED,+EAA+E;oBAC/E,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAArB,CAAqB,CAAC,CAAC,CAAC,CAAC;oBAC9G,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;iBACf;aACD;SACD;QAED,OAAO,MAAM,CAAC;IACf,CAAC;IAEO,mCAAkB,GAA1B,UAA2B,MAA0B,EAAE,IAAoB,EAAE,WAAyB;QACrG,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAEzB,KAAmB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;YAAzB,IAAM,IAAI,oBAAA;YACd,uEAAuE;YACvE,IAAI,IAAI,CAAC,GAAG,GAAG,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE;gBACjC,OAAO,OAAO,CAAC;aACf;YAED,wDAAwD;YACxD,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;SAChC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;IAEO,mCAAkB,GAA1B,UAA2B,MAA0B,EAAE,IAAoB,EAAE,WAAyB;QACrG,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAEzB,KAAmB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;YAAzB,IAAM,IAAI,oBAAA;YACd,oEAAoE;YACpE,IAAI,IAAI,CAAC,GAAG,GAAG,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE;gBACjC,OAAO,OAAO,CAAC;aACf;YAED,uDAAuD;YACvD,OAAO,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;SAChC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;IAEO,0CAAyB,GAAjC,UAAkC,GAAuB,EAAE,IAAoB,EAAE,WAAuB;QAAxG,iBAaC;QAbgF,4BAAA,EAAA,eAAuB;QACvG,IAAM,WAAW,GAAiB,EAAE,CAAC;QACrC,IAAM,MAAM,GAAW,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAE5C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,MAAc;YACxC,IAAM,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,WAAW,EAAE;gBAAE,OAAO;aAAE,CAAI,gCAAgC;YAC5F,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,EAAE;gBAAE,OAAO;aAAE,CAA0B,wBAAwB;YACpF,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE;gBAAE,OAAO;aAAE,CAAQ,wBAAwB;YACpF,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACpB,CAAC;IAEO,wCAAuB,GAA/B,UAAgC,GAAuB,EAAE,IAAoB,EAAE,QAAoB;QAAnG,iBAaC;QAb8E,yBAAA,EAAA,YAAoB;QAClG,IAAM,WAAW,GAAiB,EAAE,CAAC;QACrC,IAAM,QAAQ,GAAW,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAE9C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,MAAc;YACxC,IAAM,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,QAAQ,EAAE;gBAAE,OAAO;aAAE,CAAG,6BAA6B;YACrF,IAAI,IAAI,CAAC,GAAG,GAAG,QAAQ,EAAE;gBAAE,OAAO;aAAE,CAAoB,wBAAwB;YAChF,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE;gBAAE,OAAO;aAAE,CAAI,yBAAyB;YACjF,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACpB,CAAC;IAEO,iCAAgB,GAAxB,UAAyB,GAAuB,EAAE,IAAoB,EAAE,mBAAoC;QAApC,oCAAA,EAAA,2BAAoC;QAC3G,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,mBAAmB,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC;IACjH,CAAC;IAEO,iCAAgB,GAAxB,UAAyB,GAAuB,EAAE,IAAoB;QACrE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,GAAG,CAAC,GAAG,EAAG,CAAC;SACX;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IAEO,kCAAiB,GAAzB,UAA0B,GAAuB,EAAE,IAAoB;QACtE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,CAAC,EAAE,CAAC;SACT;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,iCAAgB,GAAxB,UAAyB,GAAuB,EAAE,IAAoB,EAAE,mBAAoC;QAApC,oCAAA,EAAA,2BAAoC;QAC3G,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,mBAAmB,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC;IACjH,CAAC;IAEO,iCAAgB,GAAxB,UAAyB,GAAuB,EAAE,IAAoB;QACrE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,GAAG,CAAC,GAAG,EAAE,CAAC;SACV;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IAEO,kCAAiB,GAAzB,UAA0B,GAAuB,EAAE,IAAoB;QACtE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,CAAC,EAAE,CAAC;SACT;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,gCAAe,GAAvB,UAAwB,GAAuB,EAAE,IAAoB,EAAE,mBAAoC;QAApC,oCAAA,EAAA,2BAAoC;QAC1G,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,mBAAmB,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACvH,CAAC;IAEO,gCAAe,GAAvB,UAAwB,GAAuB,EAAE,IAAoB;QACpE,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAEO,iCAAgB,GAAxB,UAAyB,GAAuB,EAAE,IAAoB;QACrE,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IACvE,CAAC;IAEO,2BAAU,GAAlB,UAAmB,IAAgB;QAClC,IAAI,GAAG,GAAuB,IAAI,CAAC,eAAe,EAAE,CAAC;QACrD,IAAM,IAAI,GAAmB,IAAI,CAAC,OAAO,EAAE,CAAC;QAE5C,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACnC,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;SAC7B;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SACjC;QAED,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAEO,gCAAe,GAAvB,UAAwB,IAAgB;QACvC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAEO,4BAAW,GAAnB;QACC,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;QAC5B,IAAM,MAAM,GAAW,IAAI,CAAC,UAAU,EAAE,CAAC;QACzC,IAAM,MAAM,GAAW,IAAI,CAAC,UAAU,EAAE,CAAC;QAEzC,IAAI,MAAM,KAAK,IAAI,CAAC,UAAU,IAAI,MAAM,KAAK,IAAI,CAAC,UAAU,EAAE;YAC7D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;SACzB;QAED,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,yEAAyE;QACpJ,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE;YACxC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;SAC5I;IACF,CAAC;IAEO,2BAAU,GAAlB;QAAA,iBAQC;QAPA,IAAM,SAAS,GAAa,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,MAAc;YACxE,IAAM,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI;gBAAE,OAAO,CAAC,CAAC;YACpB,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACxC,CAAC;IAEO,2BAAU,GAAlB;QAAA,iBAQC;QAPA,IAAM,SAAS,GAAa,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,MAAc;YACxE,IAAM,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI;gBAAE,OAAO,CAAC,CAAC;YACpB,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACxC,CAAC;IAEO,kCAAiB,GAAzB,UAA0B,CAAM;QAC/B,IAAI,CAAE,MAAc,CAAC,UAAU,IAAI,CAAC,YAAY,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE;YAC/F,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SAC9D;QAED,IAAM,MAAM,GAAQ,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QAErE,IAAI,IAAI,GAAW,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;QAC3C,IAAI,GAAG,GAAW,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAEzC,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM;YAAE,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;QAC1E,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO;YAAE,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;QAE5E,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE;YACxC,IAAI,IAAI,CAAC,CAAC;YACV,GAAG,IAAI,CAAC,CAAC;SACT;QAED,OAAO;YACN,IAAI,MAAA;YACJ,GAAG,KAAA;SACH,CAAC;IACH,CAAC;IAEO,0CAAyB,GAAjC,UAAkC,CAAM;QACvC,IAAI,CAAE,MAAc,CAAC,UAAU,IAAI,CAAC,YAAY,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE;YAC/F,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SAC9D;QAED,OAAO;YACN,IAAI,EAAE,CAAC,CAAC,OAAO;YACf,GAAG,EAAE,CAAC,CAAC,OAAO;SACd,CAAC;IACH,CAAC;IAEO,qCAAoB,GAA5B;QACC,IAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;QAChF,IAAM,SAAS,GAAW,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7E,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC;IACzC,CAAC;IAEO,kCAAiB,GAAzB;QACC,IAAM,SAAS,GAAW,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QAClF,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACtF,CAAC;IAEO,iCAAgB,GAAxB;QACC,IAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;QAChF,IAAM,SAAS,GAAW,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7E,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjE,CAAC;IAEO,qCAAoB,GAA5B,UAA6B,QAA2B;QAAxD,iBAaC;QAZA,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,MAAc,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAvB,CAAuB,CAAC;aAC/E,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAnB,CAAmB,CAAC;aACnC,IAAI,CAAC,UAAC,IAAgB;YACtB,IAAI,CAAC,IAAI;gBAAE,OAAO,KAAK,CAAC;YAExB,IAAM,IAAI,GAAyB,IAAI,CAAC,aAAa,EAAE,CAAC;YACxD,IAAM,GAAG,GAAsB,IAAI,CAAC,WAAW,EAAE,CAAC;YAElD,kCAAkC;YAClC,OAAO,QAAQ,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxE,QAAQ,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,mCAAkB,GAA1B,UAA2B,IAAgB;QAC1C,IAAM,GAAG,GAAuB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvD,IAAM,IAAI,GAAmB,IAAI,CAAC,OAAO,EAAE,CAAC;QAE5C,IAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;QACzF,IAAM,YAAY,GAAoC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACjG,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAM,WAAW,GAAsB,YAAY,CAAC,QAAQ,CAAC;QAC7D,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC/B,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,WAAW,CAAC,eAAe,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;QAC5D,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAEO,kCAAiB,GAAzB;QAAA,iBAOC;QANA,IAAM,UAAU,GAAU,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;aACrD,GAAG,CAAC,UAAC,MAAc,IAAK,OAAA,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAvB,CAAuB,CAAC;aAChD,MAAM,CAAC,UAAC,IAAgB,IAAK,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC;aACpC,GAAG,CAAC,UAAC,IAAgB,IAAK,OAAA,IAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC;QAEnD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEO,iCAAgB,GAAxB;QACC,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAEzC,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACtE,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAC5D,CAAC;IAEO,iCAAgB,GAAxB;QACC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YAC1B,OAAO;SACP;QAED,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YAC1B,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC7B;QAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC9B,CAAC;IAEO,kCAAiB,GAAzB;QACC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAC,IAAkB,IAAK,OAAA,IAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;QACxE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAC/B,CAAC;IAEO,+BAAc,GAAtB;QACC,OAAO,cAAc,IAAI,MAAM,IAAI,SAAS,CAAC,cAAc,GAAG,CAAC,CAAC;IACjE,CAAC;IAEO,sCAAqB,GAA7B;QAAA,iBAUC;QATA,IAAM,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,CAAa,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACrG,IAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,CAAa,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACnG,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,CAAa,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;QAE/F,IAAI,CAAC,cAAc,CAAC,IAAI,CACvB,cAAc,EACd,aAAa,EACb,YAAY,CACZ,CAAC;IACH,CAAC;IAEO,sCAAqB,GAA7B;QAAA,iBAcC;QAbA,IAAM,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,UAAC,CAAQ,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAA7B,CAA6B,CAAC,CAAC;QAC9G,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,CAAQ,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;QACxG,IAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,CAAa,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACnG,IAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,CAAa,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACnG,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,CAAa,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;QAE7F,IAAI,CAAC,cAAc,CAAC,IAAI,CACvB,qBAAqB,EACrB,mBAAmB,EACnB,aAAa,EACb,aAAa,EACb,WAAW,CACX,CAAC;IACH,CAAC;IAnhDa,sCAA+B,GAAa;QACzD,aAAa;QACb,YAAY;QACZ,UAAU;QACV,SAAS;QACT,OAAO;QACP,MAAM;QACN,QAAQ;QACR,KAAK;KACL,CAAC;IA6EF,iBAAiB;IACjB,0CAA0C;IAC1C,2CAA2C;IAC5B,2BAAoB,GAAiB;QACnD,OAAO,EAAE,CAAC,EAAE,CAAC;QACb,SAAS,EAAE,IAAI;QACf,SAAS,EAAE,IAAI;QACf,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,CAAC;QACX,YAAY,EAAE,CAAC;QACf,YAAY,EAAE,CAAC;QACf,SAAS,EAAE,GAAG;QACd,UAAU,EAAE,GAAG;QACf,OAAO,EAAE,IAAI;QACb,SAAS,EAAE,GAAG;QACd,UAAU,EAAE,GAAG;QACf,WAAW,EAAE,KAAK;QAClB,UAAU,EAAE,IAAI;QAChB,WAAW,EAAE,KAAK;QAClB,cAAc,EAAE,KAAK;QACrB,UAAU,EAAE,KAAK;QACjB,YAAY,EAAE,KAAK;QACnB,eAAe,EAAE,KAAK;QACtB,gBAAgB,EAAE,KAAK;QACvB,iBAAiB,EAAE,MAAM,CAAC,+BAA+B;QACzD,wBAAwB,EAAE,KAAK;QAC/B,2BAA2B,EAAE,SAAS;QACtC,gCAAgC,EAAE,SAAS;QAC3C,aAAa,EAAE,KAAK;KACpB,CAAC;;gBA3HF,SAAS,SAAC;oBACV,IAAI,EAAE;wBACL,iBAAiB,EAAE,4BAA4B;qBAC/C;oBACD,MAAM,EAAE,CAAC,gBAAgB,CAAC;oBAC1B,QAAQ,EAAE,UAAU;iBACpB;;;;gBAd+G,eAAe;gBAA3G,UAAU;gBAAE,QAAQ;gBAAgB,wBAAwB;;;8BA4B9E,MAAM;yBACN,MAAM;6BACN,MAAM;gCACN,MAAM;2BACN,MAAM;+BACN,MAAM;+BACN,MAAM;;IAkgDR,aAAC;CAAA,AA5hDD,IA4hDC;SArhDY,MAAM","sourcesContent":["import { Directive, ElementRef, Renderer, EventEmitter, ComponentFactoryResolver, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, Output } from \"@angular/core\";\r\nimport { Observable, Subscription, fromEvent as observableFromEvent } from \"rxjs\";\r\n\r\nimport { NgGridPlaceholder } from \"../components/NgGridPlaceholder\";\r\nimport { NgGridHelper } from \"../helpers/NgGridHelper\";\r\nimport { NgGridConfig, NgGridItemEvent, NgGridItemPosition, NgGridItemSize, NgGridRawPosition, NgGridItemDimensions, NgConfigFixDirection } from \"../interfaces/INgGrid\";\r\nimport { NgGridItem } from \"./NgGridItem\";\r\n\r\n@Directive({\r\n\thost: {\r\n\t\t\"(window:resize)\": \"resizeEventHandler($event)\",\r\n\t},\r\n\tinputs: [\"config: ngGrid\"],\r\n\tselector: \"[ngGrid]\",\r\n})\r\nexport class NgGrid implements OnInit, DoCheck, OnDestroy {\r\n\tpublic static CONST_DEFAULT_RESIZE_DIRECTIONS: string[] = [\r\n\t\t\"bottomright\",\r\n\t\t\"bottomleft\",\r\n\t\t\"topright\",\r\n\t\t\"topleft\",\r\n\t\t\"right\",\r\n\t\t\"left\",\r\n\t\t\"bottom\",\r\n\t\t\"top\",\r\n\t];\r\n\r\n\t//\tEvent Emitters\r\n\t@Output() public onDragStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onDrag: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onDragStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onResizeStart: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onResize: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onResizeStop: EventEmitter<NgGridItem> = new EventEmitter<NgGridItem>();\r\n\t@Output() public onItemChange: EventEmitter<NgGridItemEvent[]> = new EventEmitter<NgGridItemEvent[]>();\r\n\r\n\t//\tPublic variables\r\n\tpublic colWidth: number = 250;\r\n\tpublic rowHeight: number = 250;\r\n\tpublic minCols: number = 1;\r\n\tpublic minRows: number = 1;\r\n\tpublic marginTop: number = 10;\r\n\tpublic marginRight: number = 10;\r\n\tpublic marginBottom: number = 10;\r\n\tpublic marginLeft: number = 10;\r\n\tpublic screenMargin: number = 0;\r\n\tpublic isDragging: boolean = false;\r\n\tpublic isResizing: boolean = false;\r\n\tpublic autoStyle: boolean = true;\r\n\tpublic resizeEnable: boolean = true;\r\n\tpublic dragEnable: boolean = true;\r\n\tpublic cascade: string = \"up\";\r\n\tpublic minWidth: number = 100;\r\n\tpublic minHeight: number = 100;\r\n\tpublic resizeDirections: string[] = NgGrid.CONST_DEFAULT_RESIZE_DIRECTIONS;\r\n\r\n\t//\tPrivate variables\r\n\tprivate _items: Map<string, NgGridItem> = new Map<string, NgGridItem>();\r\n\tprivate _draggingItem: NgGridItem = null;\r\n\tprivate _resizingItem: NgGridItem = null;\r\n\tprivate _resizeDirection: string = null;\r\n\tprivate _itemsInGrid: Set<string> = new Set<string>();\r\n\tprivate _maxCols: number = 0;\r\n\tprivate _maxRows: number = 0;\r\n\tprivate _visibleCols: number = 0;\r\n\tprivate _visibleRows: number = 0;\r\n\tprivate _posOffset: NgGridRawPosition = null;\r\n\tprivate _placeholderRef: ComponentRef<NgGridPlaceholder> = null;\r\n\tprivate _fixToGrid: boolean = false;\r\n\tprivate _autoResize: boolean = false;\r\n\tprivate _differ: KeyValueDiffer<string, any>;\r\n\tprivate _destroyed: boolean = false;\r\n\tprivate _maintainRatio: boolean = false;\r\n\tprivate _aspectRatio: number;\r\n\tprivate _preferNew: boolean = false;\r\n\tprivate _zoomOnDrag: boolean = false;\r\n\tprivate _limitToScreen: boolean = false;\r\n\tprivate _centerToScreen: boolean = false;\r\n\tprivate _curMaxRow: number = 0;\r\n\tprivate _curMaxCol: number = 0;\r\n\tprivate _dragReady: boolean = false;\r\n\tprivate _resizeReady: boolean = false;\r\n\tprivate _elementBasedDynamicRowHeight: boolean = false;\r\n\tprivate _itemFixDirection: NgConfigFixDirection = \"cascade\";\r\n\tprivate _collisionFixDirection: NgConfigFixDirection = \"cascade\";\r\n\tprivate _allowOverlap: boolean = false;\r\n\tprivate _cascadePromise: Promise<void>;\r\n\tprivate _lastZValue: number = 1;\r\n\r\n\t// Events\r\n\tprivate _documentMousemove$: Observable<Event>;\r\n\tprivate _documentMouseup$: Observable<Event>;\r\n\tprivate _mousedown$: Observable<MouseEvent>;\r\n\tprivate _mousemove$: Observable<MouseEvent>;\r\n\tprivate _mouseup$: Observable<MouseEvent>;\r\n\tprivate _touchstart$: Observable<TouchEvent>;\r\n\tprivate _touchmove$: Observable<TouchEvent>;\r\n\tprivate _touchend$: Observable<TouchEvent>;\r\n\tprivate _subscriptions: Subscription[] = [];\r\n\r\n\tprivate _enabledListener: boolean = false;\r\n\r\n\t//\tDefault config\r\n\t// tslint:disable:object-literal-sort-keys\r\n\t// tslint:disable-next-line:member-ordering\r\n\tprivate static CONST_DEFAULT_CONFIG: NgGridConfig = {\r\n\t\tmargins: [10],\r\n\t\tdraggable: true,\r\n\t\tresizable: true,\r\n\t\tmax_cols: 0,\r\n\t\tmax_rows: 0,\r\n\t\tvisible_cols: 0,\r\n\t\tvisible_rows: 0,\r\n\t\tcol_width: 250,\r\n\t\trow_height: 250,\r\n\t\tcascade: \"up\",\r\n\t\tmin_width: 100,\r\n\t\tmin_height: 100,\r\n\t\tfix_to_grid: false,\r\n\t\tauto_style: true,\r\n\t\tauto_resize: false,\r\n\t\tmaintain_ratio: false,\r\n\t\tprefer_new: false,\r\n\t\tzoom_on_drag: false,\r\n\t\tlimit_to_screen: false,\r\n\t\tcenter_to_screen: false,\r\n\t\tresize_directions: NgGrid.CONST_DEFAULT_RESIZE_DIRECTIONS,\r\n\t\telement_based_row_height: false,\r\n\t\tfix_item_position_direction: \"cascade\",\r\n\t\tfix_collision_position_direction: \"cascade\",\r\n\t\tallow_overlap: false,\r\n\t};\r\n\t// tslint:enable:object-literal-sort-keys\r\n\tprivate _config = NgGrid.CONST_DEFAULT_CONFIG;\r\n\r\n\t//\t[ng-grid] attribute handler\r\n\tset config(v: NgGridConfig) {\r\n\t\tif (v == null || typeof v !== \"object\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setConfig(v);\r\n\r\n\t\tif (this._differ == null && v != null) {\r\n\t\t\tthis._differ = this._differs.find(this._config).create();\r\n\t\t}\r\n\r\n\t\tthis._differ.diff(this._config);\r\n\t}\r\n\r\n\t//\tConstructor\r\n\tconstructor(\r\n\t\tprivate _differs: KeyValueDiffers,\r\n\t\tprivate _ngEl: ElementRef,\r\n\t\tprivate _renderer: Renderer,\r\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\t) {\r\n\t\tthis._defineListeners();\r\n\t}\r\n\r\n\t//\tPublic methods\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._renderer.setElementClass(this._ngEl.nativeElement, \"grid\", true);\r\n\t\tif (this.autoStyle) this._renderer.setElementStyle(this._ngEl.nativeElement, \"position\", \"relative\");\r\n\t\tthis.setConfig(this._config);\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroyed = true;\r\n\t\tthis._disableListeners();\r\n\t}\r\n\r\n\tpublic generateItemUid(): string {\r\n\t\tconst uid: string = NgGridHelper.generateUuid();\r\n\r\n\t\tif (this._items.has(uid)) {\r\n\t\t\treturn this.generateItemUid();\r\n\t\t}\r\n\r\n\t\treturn uid;\r\n\t}\r\n\r\n\tpublic setConfig(config: NgGridConfig): void {\r\n\t\tthis._config = config;\r\n\r\n\t\tlet maxColRowChanged = false;\r\n\t\tfor (const x in config) {\r\n\t\t\tif (!(x in config)) continue;\r\n\r\n\t\t\tconst val = config[x];\r\n\t\t\tconst intVal = !val ? 0 : parseInt(val, 10);\r\n\r\n\t\t\t// tslint:disable-next-line:switch-default\r\n\t\t\tswitch (x) {\r\n\t\t\t\tcase \"margins\":\r\n\t\t\t\t\tthis.setMargins(val);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"col_width\":\r\n\t\t\t\t\tthis.colWidth = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"row_height\":\r\n\t\t\t\t\tthis.rowHeight = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auto_style\":\r\n\t\t\t\t\tthis.autoStyle = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auto_resize\":\r\n\t\t\t\t\tthis._autoResize = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"draggable\":\r\n\t\t\t\t\tthis.dragEnable = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"resizable\":\r\n\t\t\t\t\tthis.resizeEnable = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"max_rows\":\r\n\t\t\t\t\tmaxColRowChanged = maxColRowChanged || this._maxRows !== intVal;\r\n\t\t\t\t\tthis._maxRows = intVal < 0 ? 0 : intVal;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"max_cols\":\r\n\t\t\t\t\tmaxColRowChanged = maxColRowChanged || this._maxCols !== intVal;\r\n\t\t\t\t\tthis._maxCols = intVal < 0 ? 0 : intVal;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"visible_rows\":\r\n\t\t\t\t\tthis._visibleRows = Math.max(intVal, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"visible_cols\":\r\n\t\t\t\t\tthis._visibleCols = Math.max(intVal, 0);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"min_rows\":\r\n\t\t\t\t\tthis.minRows = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"min_cols\":\r\n\t\t\t\t\tthis.minCols = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"min_height\":\r\n\t\t\t\t\tthis.minHeight = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"min_width\":\r\n\t\t\t\t\tthis.minWidth = Math.max(intVal, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"zoom_on_drag\":\r\n\t\t\t\t\tthis._zoomOnDrag = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"cascade\":\r\n\t\t\t\t\tif (this.cascade !== val) {\r\n\t\t\t\t\t\tthis.cascade = val;\r\n\t\t\t\t\t\tthis._cascadeGrid();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"fix_to_grid\":\r\n\t\t\t\t\tthis._fixToGrid = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"maintain_ratio\":\r\n\t\t\t\t\tthis._maintainRatio = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"prefer_new\":\r\n\t\t\t\t\tthis._preferNew = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"limit_to_screen\":\r\n\t\t\t\t\tthis._limitToScreen = !this._autoResize && !!val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"center_to_screen\":\r\n\t\t\t\t\tthis._centerToScreen = val ? true : false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"resize_directions\":\r\n\t\t\t\t\tthis.resizeDirections = val || [\"bottomright\", \"bottomleft\", \"topright\", \"topleft\", \"right\", \"left\", \"bottom\", \"top\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"element_based_row_height\":\r\n\t\t\t\t\tthis._elementBasedDynamicRowHeight = !!val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"fix_item_position_direction\":\r\n\t\t\t\t\tthis._itemFixDirection = val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"fix_collision_position_direction\":\r\n\t\t\t\t\tthis._collisionFixDirection = val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"allow_overlap\":\r\n\t\t\t\t\tthis._allowOverlap = !!val;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._allowOverlap && this.cascade !== \"off\" && this.cascade !== \"\") {\r\n\t\t\t// tslint:disable-next-line:no-console\r\n\t\t\tconsole.warn(\"Unable to overlap items when a cascade direction is set.\");\r\n\t\t\tthis._allowOverlap = false;\r\n\t\t}\r\n\r\n\t\tif (this.dragEnable || this.resizeEnable) {\r\n\t\t\tthis._enableListeners();\r\n\t\t} else {\r\n\t\t\tthis._disableListeners();\r\n\t\t}\r\n\r\n\t\tif (this._itemFixDirection === \"cascade\") {\r\n\t\t\tthis._itemFixDirection = this._getFixDirectionFromCascade();\r\n\t\t}\r\n\r\n\t\tif (this._collisionFixDirection === \"cascade\") {\r\n\t\t\tthis._collisionFixDirection = this._getFixDirectionFromCascade();\r\n\t\t}\r\n\r\n\t\tif (this._limitToScreen) {\r\n\t\t\tconst newMaxCols = this._getContainerColumns();\r\n\r\n\t\t\tif (this._maxCols !== newMaxCols) {\r\n\t\t\t\tthis._maxCols = newMaxCols;\r\n\t\t\t\tmaxColRowChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._limitToScreen && this._centerToScreen) {\r\n\t\t\tthis.screenMargin = this._getScreenMargin();\r\n\t\t} else {\r\n\t\t\tthis.screenMargin = 0;\r\n\t\t}\r\n\r\n\t\tif (this._maintainRatio) {\r\n\t\t\tif (this.colWidth && this.rowHeight) {\r\n\t\t\t\tthis._aspectRatio = this.colWidth / this.rowHeight;\r\n\t\t\t} else {\r\n\t\t\t\tthis._maintainRatio = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (maxColRowChanged) {\r\n\t\t\tif (this._maxCols > 0 && this._maxRows > 0) {\t//\tCan't have both, prioritise on cascade\r\n\t\t\t\tswitch (this.cascade) {\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tthis._maxCols = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._maxRows = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._updatePositionsAfterMaxChange();\r\n\t\t}\r\n\r\n\t\tthis._calculateColWidth();\r\n\t\tthis._calculateRowHeight();\r\n\r\n\t\tconst maxWidth = this._maxCols * this.colWidth;\r\n\t\tconst maxHeight = this._maxRows * this.rowHeight;\r\n\r\n\t\tif (maxWidth > 0 && this.minWidth > maxWidth) this.minWidth = 0.75 * this.colWidth;\r\n\t\tif (maxHeight > 0 && this.minHeight > maxHeight) this.minHeight = 0.75 * this.rowHeight;\r\n\r\n\t\tif (this.minWidth > this.colWidth) this.minCols = Math.max(this.minCols, Math.ceil(this.minWidth / this.colWidth));\r\n\t\tif (this.minHeight > this.rowHeight) this.minRows = Math.max(this.minRows, Math.ceil(this.minHeight / this.rowHeight));\r\n\r\n\t\tif (this._maxCols > 0 && this.minCols > this._maxCols) this.minCols = 1;\r\n\t\tif (this._maxRows > 0 && this.minRows > this._maxRows) this.minRows = 1;\r\n\r\n\t\tthis._updateRatio();\r\n\r\n\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\tthis._removeFromGrid(item);\r\n\t\t\titem.setCascadeMode(this.cascade);\r\n\t\t});\r\n\r\n\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\titem.recalculateSelf();\r\n\t\t\tthis._addToGrid(item);\r\n\t\t});\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\t}\r\n\r\n\tpublic getItemPosition(itemId: string): NgGridItemPosition {\r\n\t\treturn this._items.has(itemId) ? this._items.get(itemId).getGridPosition() : null;\r\n\t}\r\n\r\n\tpublic getItemSize(itemId: string): NgGridItemSize {\r\n\t\treturn this._items.has(itemId) ? this._items.get(itemId).getSize() : null;\r\n\t}\r\n\r\n\tpublic ngDoCheck(): boolean {\r\n\t\tif (this._differ != null) {\r\n\t\t\tconst changes = this._differ.diff(this._config);\r\n\r\n\t\t\tif (changes != null) {\r\n\t\t\t\tthis._applyChanges(changes);\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic setMargins(margins: string[]): void {\r\n\t\tthis.marginTop = Math.max(parseInt(margins[0], 10), 0);\r\n\t\tthis.marginRight = margins.length >= 2 ? Math.max(parseInt(margins[1], 10), 0) : this.marginTop;\r\n\t\tthis.marginBottom = margins.length >= 3 ? Math.max(parseInt(margins[2], 10), 0) : this.marginTop;\r\n\t\tthis.marginLeft = margins.length >= 4 ? Math.max(parseInt(margins[3], 10), 0) : this.marginRight;\r\n\t}\r\n\r\n\tpublic enableDrag(): void {\r\n\t\tthis.dragEnable = true;\r\n\t}\r\n\r\n\tpublic disableDrag(): void {\r\n\t\tthis.dragEnable = false;\r\n\t}\r\n\r\n\tpublic enableResize(): void {\r\n\t\tthis.resizeEnable = true;\r\n\t}\r\n\r\n\tpublic disableResize(): void {\r\n\t\tthis.resizeEnable = false;\r\n\t}\r\n\r\n\tpublic addItem(ngItem: NgGridItem): void {\r\n\t\tngItem.setCascadeMode(this.cascade);\r\n\r\n\t\tif (!this._preferNew) {\r\n\t\t\tconst newPos = this._fixGridPosition(ngItem.getGridPosition(), ngItem.getSize());\r\n\t\t\tngItem.setGridPosition(newPos);\r\n\t\t}\r\n\r\n\t\tif (ngItem.uid === null || this._items.has(ngItem.uid)) {\r\n\t\t\tngItem.uid = this.generateItemUid();\r\n\t\t}\r\n\r\n\t\tthis._items.set(ngItem.uid, ngItem);\r\n\t\tthis._addToGrid(ngItem);\r\n\r\n\t\tthis._updateSize();\r\n\r\n\t\tthis.triggerCascade().then(() => {\r\n\t\t\tngItem.recalculateSelf();\r\n\t\t\tngItem.onCascadeEvent();\r\n\r\n\t\t\tthis._emitOnItemChange();\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tpublic removeItem(ngItem: NgGridItem): void {\r\n\t\tthis._removeFromGrid(ngItem);\r\n\r\n\t\tthis._items.delete(ngItem.uid);\r\n\r\n\t\tif (this._destroyed) return;\r\n\r\n\t\tthis.triggerCascade().then(() => {\r\n\t\t\tthis._updateSize();\r\n\t\t\tthis._items.forEach((item: NgGridItem) => item.recalculateSelf());\r\n\t\t\tthis._emitOnItemChange();\r\n\t\t});\r\n\t}\r\n\r\n\tpublic updateItem(ngItem: NgGridItem): void {\r\n\t\tthis._removeFromGrid(ngItem);\r\n\t\tthis._addToGrid(ngItem);\r\n\r\n\t\tthis.triggerCascade().then(() => {\r\n\t\t\tthis._updateSize();\r\n\t\t\tngItem.onCascadeEvent();\r\n\t\t});\r\n\t}\r\n\r\n\tpublic triggerCascade(): Promise<void> {\r\n\t\tif (!this._cascadePromise) {\r\n\t\t\tthis._cascadePromise = new Promise((resolve: () => void) => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis._cascadePromise = null;\r\n\t\t\t\t\tthis._cascadeGrid(null, null);\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}, 0);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this._cascadePromise;\r\n\t}\r\n\r\n\tpublic triggerResize(): void {\r\n\t\tthis.resizeEventHandler(null);\r\n\t}\r\n\r\n\tpublic resizeEventHandler(e: any): void {\r\n\t\tthis._calculateColWidth();\r\n\t\tthis._calculateRowHeight();\r\n\r\n\t\tthis._updateRatio();\r\n\r\n\t\tif (this._limitToScreen) {\r\n\t\t\tconst newMaxColumns = this._getContainerColumns();\r\n\t\t\tif (this._maxCols !== newMaxColumns) {\r\n\t\t\t\tthis._maxCols = newMaxColumns;\r\n\t\t\t\tthis._updatePositionsAfterMaxChange();\r\n\t\t\t\tthis._cascadeGrid();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._centerToScreen) {\r\n\t\t\t\tthis.screenMargin = this._getScreenMargin();\r\n\r\n\t\t\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\t\t\titem.recalculateSelf();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (this._autoResize) {\r\n\t\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\t\titem.recalculateSelf();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._updateSize();\r\n\t}\r\n\r\n\tpublic mouseDownEventHandler(e: MouseEvent | TouchEvent): void {\r\n\t\tconst mousePos = this._getMousePosition(e);\r\n\t\tconst item = this._getItemFromPosition(mousePos);\r\n\r\n\t\tif (item == null) return;\r\n\r\n\t\tconst resizeDirection: string = item.canResize(e);\r\n\r\n\t\tif (this.resizeEnable && resizeDirection) {\r\n\t\t\tthis._resizeReady = true;\r\n\t\t\tthis._resizingItem = item;\r\n\t\t\tthis._resizeDirection = resizeDirection;\r\n\r\n\t\t\te.preventDefault();\r\n\t\t} else if (this.dragEnable && item.canDrag(e)) {\r\n\t\t\tthis._dragReady = true;\r\n\t\t\tthis._draggingItem = item;\r\n\r\n\t\t\tconst itemPos = item.getPosition();\r\n\t\t\tthis._posOffset = { left: (mousePos.left - itemPos.left), top: (mousePos.top - itemPos.top) };\r\n\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic mouseUpEventHandler(e: MouseEvent | TouchEvent | Event): void {\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis._dragStop(e);\r\n\t\t} else if (this.isResizing) {\r\n\t\t\tthis._resizeStop(e);\r\n\t\t} else if (this._dragReady || this._resizeReady) {\r\n\t\t\tthis._cleanDrag();\r\n\t\t\tthis._cleanResize();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic mouseMoveEventHandler(e: MouseEvent | TouchEvent | Event): void {\r\n\t\tif (this._resizeReady) {\r\n\t\t\tthis._resizeStart(e);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t} else if (this._dragReady) {\r\n\t\t\tthis._dragStart(e);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis._drag(e);\r\n\t\t} else if (this.isResizing) {\r\n\t\t\tthis._resize(e);\r\n\t\t} else {\r\n\t\t\tconst mousePos = this._getMousePosition(e);\r\n\t\t\tconst item = this._getItemFromPosition(mousePos);\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\titem.onMouseMove(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//\tPrivate methods\r\n\tprivate _getFixDirectionFromCascade(): NgConfigFixDirection {\r\n\t\tswitch (this.cascade) {\r\n\t\t\tcase \"up\":\r\n\t\t\tcase \"down\":\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"vertical\";\r\n\t\t\tcase \"left\":\r\n\t\t\tcase \"right\":\r\n\t\t\t\treturn \"horizontal\";\r\n\t\t}\r\n\t}\r\n\tprivate _updatePositionsAfterMaxChange(): void {\r\n\t\tthis._items.forEach((item: NgGridItem) => {\r\n\t\t\tconst pos = item.getGridPosition();\r\n\t\t\tconst dims = item.getSize();\r\n\r\n\t\t\tif (!this._hasGridCollision(pos, dims) && this._isWithinBounds(pos, dims) && dims.x <= this._maxCols && dims.y <= this._maxRows) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\tif (this._maxCols > 0 && dims.x > this._maxCols) {\r\n\t\t\t\tdims.x = this._maxCols;\r\n\t\t\t\titem.setSize(dims);\r\n\t\t\t} else if (this._maxRows > 0 && dims.y > this._maxRows) {\r\n\t\t\t\tdims.y = this._maxRows;\r\n\t\t\t\titem.setSize(dims);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hasGridCollision(pos, dims) || !this._isWithinBounds(pos, dims, true)) {\r\n\t\t\t\tconst newPosition = this._fixGridPosition(pos, dims);\r\n\t\t\t\titem.setGridPosition(newPosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._addToGrid(item);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _calculateColWidth(): void {\r\n\t\tif (this._autoResize) {\r\n\t\t\tif (this._maxCols > 0 || this._visibleCols > 0) {\r\n\t\t\t\tconst maxCols = this._maxCols > 0 ? this._maxCols : this._visibleCols;\r\n\t\t\t\tconst maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\r\n\t\t\t\tlet colWidth: number = Math.floor(maxWidth / maxCols);\r\n\t\t\t\tcolWidth -= (this.marginLeft + this.marginRight);\r\n\t\t\t\tif (colWidth > 0) this.colWidth = colWidth;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.colWidth < this.minWidth || this.minCols > this._config.min_cols) {\r\n\t\t\tthis.minCols = Math.max(this._config.min_cols, Math.ceil(this.minWidth / this.colWidth));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calculateRowHeight(): void {\r\n\t\tif (this._autoResize) {\r\n\t\t\tif (this._maxRows > 0 || this._visibleRows > 0) {\r\n\t\t\t\tconst maxRows = this._maxRows > 0 ? this._maxRows : this._visibleRows;\r\n\t\t\t\tlet maxHeight: number;\r\n\r\n\t\t\t\tif (this._elementBasedDynamicRowHeight) {\r\n\t\t\t\t\tmaxHeight = this._ngEl.nativeElement.getBoundingClientRect().height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmaxHeight = window.innerHeight - this.marginTop - this.marginBottom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet rowHeight: number = Math.max(Math.floor(maxHeight / maxRows), this.minHeight);\r\n\t\t\t\trowHeight -= (this.marginTop + this.marginBottom);\r\n\t\t\t\tif (rowHeight > 0) this.rowHeight = rowHeight;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.rowHeight < this.minHeight || this.minRows > this._config.min_rows) {\r\n\t\t\tthis.minRows = Math.max(this._config.min_rows, Math.ceil(this.minHeight / this.rowHeight));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateRatio(): void {\r\n\t\tif (!this._autoResize || !this._maintainRatio) return;\r\n\r\n\t\tif (this._maxCols > 0 && this._visibleRows <= 0) {\r\n\t\t\tthis.rowHeight = this.colWidth / this._aspectRatio;\r\n\t\t} else if (this._maxRows > 0 && this._visibleCols <= 0) {\r\n\t\t\tthis.colWidth = this._aspectRatio * this.rowHeight;\r\n\t\t} else if (this._maxCols === 0 && this._maxRows === 0) {\r\n\t\t\tif (this._visibleCols > 0) {\r\n\t\t\t\tthis.rowHeight = this.colWidth / this._aspectRatio;\r\n\t\t\t} else if (this._visibleRows > 0) {\r\n\t\t\t\tthis.colWidth = this._aspectRatio * this.rowHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _applyChanges(changes: any): void {\r\n\t\tchanges.forEachAddedItem((record: any) => { this._config[record.key] = record.currentValue; });\r\n\t\tchanges.forEachChangedItem((record: any) => { this._config[record.key] = record.currentValue; });\r\n\t\tchanges.forEachRemovedItem((record: any) => { delete this._config[record.key]; });\r\n\r\n\t\tthis.setConfig(this._config);\r\n\t}\r\n\r\n\tprivate _resizeStart(e: any): void {\r\n\t\tif (!this.resizeEnable || !this._resizingItem) return;\r\n\r\n\t\t//\tSetup\r\n\t\tthis._resizingItem.startMoving();\r\n\t\tthis._removeFromGrid(this._resizingItem);\r\n\t\tthis._createPlaceholder(this._resizingItem);\r\n\r\n\t\tif (this._allowOverlap) {\r\n\t\t\tthis._resizingItem.zIndex = this._lastZValue++;\r\n\t\t}\r\n\r\n\t\t//\tStatus Flags\r\n\t\tthis.isResizing = true;\r\n\t\tthis._resizeReady = false;\r\n\r\n\t\t//\tEvents\r\n\t\tthis.onResizeStart.emit(this._resizingItem);\r\n\t\tthis._resizingItem.onResizeStartEvent();\r\n\t}\r\n\r\n\tprivate _dragStart(e: any): void {\r\n\t\tif (!this.dragEnable || !this._draggingItem) return;\r\n\r\n\t\t//\tStart dragging\r\n\t\tthis._draggingItem.startMoving();\r\n\t\tthis._removeFromGrid(this._draggingItem);\r\n\t\tthis._createPlaceholder(this._draggingItem);\r\n\r\n\t\tif (this._allowOverlap) {\r\n\t\t\tthis._draggingItem.zIndex = this._lastZValue++;\r\n\t\t}\r\n\r\n\t\t//\tStatus Flags\r\n\t\tthis.isDragging = true;\r\n\t\tthis._dragReady = false;\r\n\r\n\t\t//\tEvents\r\n\t\tthis.onDragStart.emit(this._draggingItem);\r\n\t\tthis._draggingItem.onDragStartEvent();\r\n\r\n\t\t//\tZoom\r\n\t\tif (this._zoomOnDrag) {\r\n\t\t\tthis._zoomOut();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _zoomOut(): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, \"transform\", \"scale(0.5, 0.5)\");\r\n\t}\r\n\r\n\tprivate _resetZoom(): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, \"transform\", \"\");\r\n\t}\r\n\r\n\tprivate _drag(e: any): void {\r\n\t\tif (!this.isDragging) return;\r\n\r\n\t\tif (window.getSelection) {\r\n\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\twindow.getSelection().empty();\r\n\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t}\r\n\t\t} else if ((document as any).selection) {\r\n\t\t\t(document as any).selection.empty();\r\n\t\t}\r\n\r\n\t\tconst mousePos = this._getMousePosition(e);\r\n\t\tconst newL = (mousePos.left - this._posOffset.left);\r\n\t\tconst newT = (mousePos.top - this._posOffset.top);\r\n\r\n\t\tconst itemPos = this._draggingItem.getGridPosition();\r\n\t\tlet gridPos = this._calculateGridPosition(newL, newT);\r\n\t\tconst dims = this._draggingItem.getSize();\r\n\r\n\t\tgridPos = this._fixPosToBoundsX(gridPos, dims);\r\n\r\n\t\tif (!this._isWithinBoundsY(gridPos, dims)) {\r\n\t\t\tgridPos = this._fixPosToBoundsY(gridPos, dims);\r\n\t\t}\r\n\r\n\t\tif (gridPos.col !== itemPos.col || gridPos.row !== itemPos.row) {\r\n\t\t\tthis._draggingItem.setGridPosition(gridPos, this._fixToGrid);\r\n\t\t\tthis._placeholderRef.instance.setGridPosition(gridPos);\r\n\r\n\t\t\tif ([\"up\", \"down\", \"left\", \"right\"].indexOf(this.cascade) >= 0) {\r\n\t\t\t\tthis._fixGridCollisions(gridPos, dims);\r\n\t\t\t\tthis._cascadeGrid(gridPos, dims);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._fixToGrid) {\r\n\t\t\tthis._draggingItem.setPosition(newL, newT);\r\n\t\t}\r\n\r\n\t\tthis.onDrag.emit(this._draggingItem);\r\n\t\tthis._draggingItem.onDragEvent();\r\n\t}\r\n\r\n\tprivate _resize(e: any): void {\r\n\t\tif (!this.isResizing) { return; }\r\n\r\n\t\tif (window.getSelection) {\r\n\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\twindow.getSelection().empty();\r\n\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t}\r\n\t\t} else if ((document as any).selection) {\r\n\t\t\t(document as any).selection.empty();\r\n\t\t}\r\n\r\n\t\tconst mousePos = this._getMousePosition(e);\r\n\t\tconst itemPos = this._resizingItem.getPosition();\r\n\t\tconst itemDims = this._resizingItem.getDimensions();\r\n\t\tconst endCorner = {\r\n\t\t\tleft: itemPos.left + itemDims.width,\r\n\t\t\ttop: itemPos.top + itemDims.height,\r\n\t\t};\r\n\r\n\t\tconst resizeTop = this._resizeDirection.includes(\"top\");\r\n\t\tconst resizeBottom = this._resizeDirection.includes(\"bottom\");\r\n\t\tconst resizeLeft = this._resizeDirection.includes(\"left\");\r\n\t\tconst resizeRight = this._resizeDirection.includes(\"right\");\r\n\r\n\t\t//\tCalculate new width and height based upon resize direction\r\n\t\tlet newW = resizeRight\r\n\t\t\t? (mousePos.left - itemPos.left + 1)\r\n\t\t\t: resizeLeft\r\n\t\t\t\t? (endCorner.left - mousePos.left + 1)\r\n\t\t\t\t: itemDims.width;\r\n\t\tlet newH = resizeBottom\r\n\t\t\t? (mousePos.top - itemPos.top + 1)\r\n\t\t\t: resizeTop\r\n\t\t\t\t? (endCorner.top - mousePos.top + 1)\r\n\t\t\t\t: itemDims.height;\r\n\r\n\t\tif (newW < this.minWidth)\r\n\t\t\tnewW = this.minWidth;\r\n\t\tif (newH < this.minHeight)\r\n\t\t\tnewH = this.minHeight;\r\n\t\tif (newW < this._resizingItem.minWidth)\r\n\t\t\tnewW = this._resizingItem.minWidth;\r\n\t\tif (newH < this._resizingItem.minHeight)\r\n\t\t\tnewH = this._resizingItem.minHeight;\r\n\r\n\t\tlet newX = itemPos.left;\r\n\t\tlet newY = itemPos.top;\r\n\r\n\t\tif (resizeLeft)\r\n\t\t\tnewX = endCorner.left - newW;\r\n\t\tif (resizeTop)\r\n\t\t\tnewY = endCorner.top - newH;\r\n\r\n\t\tlet calcSize = this._calculateGridSize(newW, newH);\r\n\t\tconst itemSize = this._resizingItem.getSize();\r\n\t\tconst iGridPos = this._resizingItem.getGridPosition();\r\n\t\tconst bottomRightCorner = {\r\n\t\t\tcol: iGridPos.col + itemSize.x,\r\n\t\t\trow: iGridPos.row + itemSize.y,\r\n\t\t};\r\n\t\tconst targetPos: NgGridItemPosition = Object.assign({}, iGridPos);\r\n\r\n\t\tif (this._resizeDirection.includes(\"top\"))\r\n\t\t\ttargetPos.row = bottomRightCorner.row - calcSize.y;\r\n\t\tif (this._resizeDirection.includes(\"left\"))\r\n\t\t\ttargetPos.col = bottomRightCorner.col - calcSize.x;\r\n\r\n\t\tif (!this._isWithinBoundsX(targetPos, calcSize))\r\n\t\t\tcalcSize = this._fixSizeToBoundsX(targetPos, calcSize);\r\n\r\n\t\tif (!this._isWithinBoundsY(targetPos, calcSize))\r\n\t\t\tcalcSize = this._fixSizeToBoundsY(targetPos, calcSize);\r\n\r\n\t\tcalcSize = this._resizingItem.fixResize(calcSize);\r\n\r\n\t\tif (calcSize.x !== itemSize.x || calcSize.y !== itemSize.y) {\r\n\t\t\tthis._resizingItem.setGridPosition(targetPos, this._fixToGrid);\r\n\t\t\tthis._placeholderRef.instance.setGridPosition(targetPos);\r\n\t\t\tthis._resizingItem.setSize(calcSize, this._fixToGrid);\r\n\t\t\tthis._placeholderRef.instance.setSize(calcSize);\r\n\r\n\t\t\tif ([\"up\", \"down\", \"left\", \"right\"].indexOf(this.cascade) >= 0) {\r\n\t\t\t\tthis._fixGridCollisions(targetPos, calcSize);\r\n\t\t\t\tthis._cascadeGrid(targetPos, calcSize);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this._fixToGrid) {\r\n\t\t\tthis._resizingItem.setDimensions(newW, newH);\r\n\t\t\tthis._resizingItem.setPosition(newX, newY);\r\n\t\t}\r\n\r\n\t\tthis.onResize.emit(this._resizingItem);\r\n\t\tthis._resizingItem.onResizeEvent();\r\n\t}\r\n\r\n\tprivate _dragStop(e: any): void {\r\n\t\tif (!this.isDragging) return;\r\n\r\n\t\tthis.isDragging = false;\r\n\r\n\t\tconst itemPos = this._draggingItem.getGridPosition();\r\n\r\n\t\tthis._draggingItem.setGridPosition(itemPos);\r\n\t\tthis._addToGrid(this._draggingItem);\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\r\n\t\tthis._draggingItem.stopMoving();\r\n\t\tthis._draggingItem.onDragStopEvent();\r\n\t\tthis.onDragStop.emit(this._draggingItem);\r\n\r\n\t\tthis._cleanDrag();\r\n\t\tthis._placeholderRef.destroy();\r\n\r\n\t\tthis._emitOnItemChange();\r\n\r\n\t\tif (this._zoomOnDrag) {\r\n\t\t\tthis._resetZoom();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resizeStop(e: any): void {\r\n\t\tif (!this.isResizing) return;\r\n\r\n\t\tthis.isResizing = false;\r\n\r\n\t\tconst itemDims = this._resizingItem.getSize();\r\n\t\tthis._resizingItem.setSize(itemDims);\r\n\r\n\t\tconst itemPos = this._resizingItem.getGridPosition();\r\n\t\tthis._resizingItem.setGridPosition(itemPos);\r\n\r\n\t\tthis._addToGrid(this._resizingItem);\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\r\n\t\tthis._resizingItem.stopMoving();\r\n\t\tthis._resizingItem.onResizeStopEvent();\r\n\t\tthis.onResizeStop.emit(this._resizingItem);\r\n\r\n\t\tthis._cleanResize();\r\n\t\tthis._placeholderRef.destroy();\r\n\r\n\t\tthis._emitOnItemChange();\r\n\t}\r\n\r\n\tprivate _cleanDrag(): void {\r\n\t\tthis._draggingItem = null;\r\n\t\tthis._posOffset = null;\r\n\t\tthis.isDragging = false;\r\n\t\tthis._dragReady = false;\r\n\t}\r\n\r\n\tprivate _cleanResize(): void {\r\n\t\tthis._resizingItem = null;\r\n\t\tthis._resizeDirection = null;\r\n\t\tthis.isResizing = false;\r\n\t\tthis._resizeReady = false;\r\n\t}\r\n\r\n\tprivate _calculateGridSize(width: number, height: number): NgGridItemSize {\r\n\t\twidth += this.marginLeft + this.marginRight;\r\n\t\theight += this.marginTop + this.marginBottom;\r\n\r\n\t\tlet sizex = Math.max(this.minCols, Math.round(width / (this.colWidth + this.marginLeft + this.marginRight)));\r\n\t\tlet sizey = Math.max(this.minRows, Math.round(height / (this.rowHeight + this.marginTop + this.marginBottom)));\r\n\r\n\t\tif (!this._isWithinBoundsX({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizex = this._maxCols;\r\n\t\tif (!this._isWithinBoundsY({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizey = this._maxRows;\r\n\r\n\t\treturn { x: sizex, y: sizey };\r\n\t}\r\n\r\n\tprivate _calculateGridPosition(left: number, top: number): NgGridItemPosition {\r\n\t\tlet col = Math.max(1, Math.round(left / (this.colWidth + this.marginLeft + this.marginRight)) + 1);\r\n\t\tlet row = Math.max(1, Math.round(top / (this.rowHeight + this.marginTop + this.marginBottom)) + 1);\r\n\r\n\t\tif (!this._isWithinBoundsX({ col, row }, { x: 1, y: 1 })) col = this._maxCols;\r\n\t\tif (!this._isWithinBoundsY({ col, row }, { x: 1, y: 1 })) row = this._maxRows;\r\n\r\n\t\treturn { col, row };\r\n\t}\r\n\r\n\tprivate _hasGridCollision(pos: NgGridItemPosition, dims: NgGridItemSize): boolean {\r\n\t\tconst positions = this._getCollisions(pos, dims);\r\n\r\n\t\tif (positions == null || positions.length === 0) return false;\r\n\r\n\t\treturn positions.some((v: NgGridItem) => {\r\n\t\t\treturn !(v === null);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _getCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItem[] {\r\n\t\tif (this._allowOverlap) return [];\r\n\r\n\t\tconst returns: NgGridItem[] = [];\r\n\r\n\t\tif (!pos.col) { pos.col = 1; }\r\n\t\tif (!pos.row) { pos.row = 1; }\r\n\r\n\t\tconst leftCol = pos.col;\r\n\t\tconst rightCol = pos.col + dims.x;\r\n\t\tconst topRow = pos.row;\r\n\t\tconst bottomRow = pos.row + dims.y;\r\n\r\n\t\tthis._itemsInGrid.forEach((itemId: string) => {\r\n\t\t\tconst item: NgGridItem = this._items.get(itemId);\r\n\r\n\t\t\tif (!item) {\r\n\t\t\t\tthis._itemsInGrid.delete(itemId);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst itemLeftCol = item.col;\r\n\t\t\tconst itemRightCol = item.col + item.sizex;\r\n\t\t\tconst itemTopRow = item.row;\r\n\t\t\tconst itemBottomRow = item.row + item.sizey;\r\n\r\n\t\t\tconst withinColumns = leftCol < itemRightCol && itemLeftCol < rightCol;\r\n\t\t\tconst withinRows = topRow < itemBottomRow && itemTopRow < bottomRow;\r\n\r\n\t\t\tif (withinColumns && withinRows) {\r\n\t\t\t\treturns.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tprivate _fixGridCollisions(pos: NgGridItemPosition, dims: NgGridItemSize): void {\r\n\t\tconst collisions: NgGridItem[] = this._getCollisions(pos, dims);\r\n\t\tif (collisions.length === 0) { return; }\r\n\r\n\t\tfor (const collision of collisions) {\r\n\t\t\tthis._removeFromGrid(collision);\r\n\r\n\t\t\tconst itemDims: NgGridItemSize = collision.getSize();\r\n\t\t\tconst itemPos: NgGridItemPosition = collision.getGridPosition();\r\n\t\t\tconst newItemPos: NgGridItemPosition = { col: itemPos.col, row: itemPos.row };\r\n\r\n\t\t\tif (this._collisionFixDirection === \"vertical\") {\r\n\t\t\t\tnewItemPos.row = pos.row + dims.y;\r\n\r\n\t\t\t\tif (!this._isWithinBoundsY(newItemPos, itemDims)) {\r\n\t\t\t\t\tnewItemPos.col = pos.col + dims.x;\r\n\t\t\t\t\tnewItemPos.row = 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._collisionFixDirection === \"horizontal\") {\r\n\t\t\t\tnewItemPos.col = pos.col + dims.x;\r\n\r\n\t\t\t\tif (!this._isWithinBoundsX(newItemPos, itemDims)) {\r\n\t\t\t\t\tnewItemPos.col = 1;\r\n\t\t\t\t\tnewItemPos.row = pos.row + dims.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcollision.setGridPosition(newItemPos);\r\n\r\n\t\t\tthis._fixGridCollisions(newItemPos, itemDims);\r\n\t\t\tthis._addToGrid(collision);\r\n\t\t\tcollision.onCascadeEvent();\r\n\t\t}\r\n\r\n\t\tthis._fixGridCollisions(pos, dims);\r\n\t}\r\n\r\n\tprivate _cascadeGrid(pos?: NgGridItemPosition, dims?: NgGridItemSize): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tif (this._allowOverlap) return;\r\n\t\tif (!pos !== !dims) throw new Error(\"Cannot cascade with only position and not dimensions\");\r\n\r\n\t\tif (this.isDragging && this._draggingItem && !pos && !dims) {\r\n\t\t\tpos = this._draggingItem.getGridPosition();\r\n\t\t\tdims = this._draggingItem.getSize();\r\n\t\t} else if (this.isResizing && this._resizingItem && !pos && !dims) {\r\n\t\t\tpos = this._resizingItem.getGridPosition();\r\n\t\t\tdims = this._resizingItem.getSize();\r\n\t\t}\r\n\r\n\t\tlet itemsInGrid: NgGridItem[] = Array.from(this._itemsInGrid, (itemId: string) => this._items.get(itemId));\r\n\r\n\t\tswitch (this.cascade) {\r\n\t\t\tcase \"up\":\r\n\t\t\tcase \"down\":\r\n\t\t\t\titemsInGrid = itemsInGrid.sort(NgGridHelper.sortItemsByPositionVertical);\r\n\t\t\t\tconst lowestRowPerColumn: Map<number, number> = new Map<number, number>();\r\n\r\n\t\t\t\tfor (const item of itemsInGrid) {\r\n\t\t\t\t\tif (item.isFixed) continue;\r\n\r\n\t\t\t\t\tconst itemDims: NgGridItemSize = item.getSize();\r\n\t\t\t\t\tconst itemPos: NgGridItemPosition = item.getGridPosition();\r\n\r\n\t\t\t\t\tlet lowestRowForItem: number = lowestRowPerColumn.get(itemPos.col) || 1;\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < itemDims.x; i++) {\r\n\t\t\t\t\t\tconst lowestRowForColumn = lowestRowPerColumn.get(itemPos.col + i) || 1;\r\n\t\t\t\t\t\tlowestRowForItem = Math.max(lowestRowForColumn, lowestRowForItem);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst leftCol = itemPos.col;\r\n\t\t\t\t\tconst rightCol = itemPos.col + itemDims.x;\r\n\r\n\t\t\t\t\tif (pos && dims) {\r\n\t\t\t\t\t\tconst withinColumns = rightCol > pos.col && leftCol < (pos.col + dims.x);\r\n\r\n\t\t\t\t\t\tif (withinColumns) {          //\tIf our element is in one of the item's columns\r\n\t\t\t\t\t\t\tconst roomAboveItem = itemDims.y <= (pos.row - lowestRowForItem);\r\n\r\n\t\t\t\t\t\t\tif (!roomAboveItem) {                                                  //\tItem can't fit above our element\r\n\t\t\t\t\t\t\t\tlowestRowForItem = Math.max(lowestRowForItem, pos.row + dims.y);   //\tSet the lowest row to be below it\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst newPos: NgGridItemPosition = { col: itemPos.col, row: lowestRowForItem };\r\n\r\n\t\t\t\t\t//\tWhat if it's not within bounds Y?\r\n\t\t\t\t\tif (lowestRowForItem !== itemPos.row && this._isWithinBoundsY(newPos, itemDims)) {\t//\tIf the item is not already on this row move it up\r\n\t\t\t\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\t\t\t\titem.setGridPosition(newPos);\r\n\r\n\t\t\t\t\t\titem.onCascadeEvent();\r\n\t\t\t\t\t\tthis._addToGrid(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 0; i < itemDims.x; i++) {\r\n\t\t\t\t\t\tlowestRowPerColumn.set(itemPos.col + i, lowestRowForItem + itemDims.y);\t//\tUpdate the lowest row to be below the item\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"left\":\r\n\t\t\tcase \"right\":\r\n\t\t\t\titemsInGrid = itemsInGrid.sort(NgGridHelper.sortItemsByPositionHorizontal);\r\n\t\t\t\tconst lowestColumnPerRow: Map<number, number> = new Map<number, number>();\r\n\r\n\t\t\t\tfor (const item of itemsInGrid) {\r\n\t\t\t\t\tconst itemDims: NgGridItemSize = item.getSize();\r\n\t\t\t\t\tconst itemPos: NgGridItemPosition = item.getGridPosition();\r\n\r\n\t\t\t\t\tlet lowestColumnForItem: number = lowestColumnPerRow.get(itemPos.row) || 1;\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < itemDims.y; i++) {\r\n\t\t\t\t\t\tconst lowestOffsetColumn: number = lowestColumnPerRow.get(itemPos.row + i) || 1;\r\n\t\t\t\t\t\tlowestColumnForItem = Math.max(lowestOffsetColumn, lowestColumnForItem);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst topRow = itemPos.row;\r\n\t\t\t\t\tconst bottomRow = itemPos.row + itemDims.y;\r\n\r\n\t\t\t\t\tif (pos && dims) {\r\n\t\t\t\t\t\tconst withinRows = bottomRow > pos.col && topRow < (pos.col + dims.x);\r\n\r\n\t\t\t\t\t\tif (withinRows) {          //\tIf our element is in one of the item's rows\r\n\t\t\t\t\t\t\tconst roomNextToItem = itemDims.x <= (pos.col - lowestColumnForItem);\r\n\r\n\t\t\t\t\t\t\tif (!roomNextToItem) {                                                      //\tItem can't fit next to our element\r\n\t\t\t\t\t\t\t\tlowestColumnForItem = Math.max(lowestColumnForItem, pos.col + dims.x);  //\tSet the lowest col to be the other side of it\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst newPos: NgGridItemPosition = { col: lowestColumnForItem, row: itemPos.row };\r\n\r\n\t\t\t\t\tif (lowestColumnForItem !== itemPos.col && this._isWithinBoundsX(newPos, itemDims)) {\t//\tIf the item is not already on this col move it up\r\n\t\t\t\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\t\t\t\titem.setGridPosition(newPos);\r\n\r\n\t\t\t\t\t\titem.onCascadeEvent();\r\n\t\t\t\t\t\tthis._addToGrid(item);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 0; i < itemDims.y; i++) {\r\n\t\t\t\t\t\tlowestColumnPerRow.set(itemPos.row + i, lowestColumnForItem + itemDims.x);\t//\tUpdate the lowest col to be below the item\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _fixGridPosition(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\tif (!this._hasGridCollision(pos, dims)) return pos;\r\n\r\n\t\tconst maxAllowedRows = this._maxRows;\r\n\t\tconst maxUsedRows = this._getMaxRow();\r\n\t\tconst maxAllowedCols = this._maxCols;\r\n\t\tconst maxUsedCols = this._getMaxCol();\r\n\t\tconst newPos = {\r\n\t\t\tcol: pos.col,\r\n\t\t\trow: pos.row,\r\n\t\t};\r\n\r\n\t\tif (maxAllowedCols === 0 && dims.y >= maxAllowedRows) {\r\n\t\t\t//\tIt's too big to fit alongside any other item, it has to go straight to the top right\r\n\t\t\tnewPos.col = maxUsedCols + 1;\r\n\t\t\tnewPos.row = 1;\r\n\t\t} else if  (maxAllowedRows === 0 && dims.x >= maxAllowedCols) {\r\n\t\t\t//\tIt's too big to fit alongside any other item, it has to go straight to the bottom left\r\n\t\t\tnewPos.row = maxUsedRows + 1;\r\n\t\t\tnewPos.col = 1;\r\n\t\t} else if (this._itemFixDirection === \"vertical\") {\r\n\t\t\tif (maxAllowedRows === 0) {\r\n\t\t\t\t//\tWe can keep pushing it down as long as we like\r\n\t\t\t\t//\tSee if it will fit in any gaps between existing items\r\n\t\t\t\tconst itemsInPath = this._getItemsInVerticalPath(newPos, dims, newPos.row);\r\n\t\t\t\tnewPos.row = this._getNextFittingRow(newPos, dims, itemsInPath);\r\n\t\t\t} else {\r\n\t\t\t\t//\tWe can only move down so far, before we need to try putting at the top of the next column\r\n\t\t\t\t//\tLuckily, we can push it out as far as we like as maxAllowedCols *must* be 0\r\n\t\t\t\tfor (; newPos.col <= maxUsedCols; ) {\r\n\t\t\t\t\t//\tSee if it will fit in any gaps between existing items in this column\r\n\t\t\t\t\tconst itemsInPath = this._getItemsInVerticalPath(newPos, dims, newPos.row);\r\n\t\t\t\t\tconst nextRow = this._getNextFittingRow(newPos, dims, itemsInPath);\r\n\r\n\t\t\t\t\t//\tSee if the item will fit somewhere in this row\r\n\t\t\t\t\tif (maxAllowedRows - nextRow >= dims.y) {\r\n\t\t\t\t\t\tnewPos.row = nextRow;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//\tIf not, try moving to the top of the column left of the smallest item in our way\r\n\t\t\t\t\tnewPos.col = Math.max(newPos.col + 1, Math.min.apply(Math, itemsInPath.map((item) => item.col + item.sizex)));\r\n\t\t\t\t\tnewPos.row = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (this._itemFixDirection === \"horizontal\") {\r\n\t\t\tif (maxAllowedCols === 0) {\r\n\t\t\t\t//\tWe can keep pushing it out as long as we like\r\n\t\t\t\t//\tSee if it will fit in any gaps between existing items\r\n\t\t\t\tconst itemsInPath = this._getItemsInHorizontalPath(newPos, dims, newPos.row);\r\n\t\t\t\tnewPos.col = this._getNextFittingCol(newPos, dims, itemsInPath);\r\n\t\t\t} else {\r\n\t\t\t\t//\tWe can only move out so far, before we need to try putting at the left of the next row\r\n\t\t\t\t//\tLuckily, we can push it down as far as we like as maxAllowedRows *must* be 0\r\n\t\t\t\tfor (; newPos.row <= maxUsedRows; ) {\r\n\t\t\t\t\tconst itemsInPath = this._getItemsInHorizontalPath(newPos, dims, newPos.col);\r\n\t\t\t\t\tconst nextCol = this._getNextFittingCol(newPos, dims, itemsInPath);\r\n\r\n\t\t\t\t\t//\tSee if the item will fit somewhere in this column\r\n\t\t\t\t\tif (maxAllowedCols - nextCol >= dims.x) {\r\n\t\t\t\t\t\tnewPos.col = nextCol;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//\tIf not, try moving to the left of the row below the smallest item in our way\r\n\t\t\t\t\tnewPos.row = Math.max(newPos.row + 1, Math.min.apply(Math, itemsInPath.map((item) => item.row + item.sizey)));\r\n\t\t\t\t\tnewPos.col = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newPos;\r\n\t}\r\n\r\n\tprivate _getNextFittingRow(newPos: NgGridItemPosition, dims: NgGridItemSize, itemsInPath: NgGridItem[]): number {\r\n\t\tlet nextRow = newPos.row;\r\n\r\n\t\tfor (const item of itemsInPath) {\r\n\t\t\t//\tWill our item fit in this column between the last item and this one?\r\n\t\t\tif (item.row - nextRow >= dims.y) {\r\n\t\t\t\treturn nextRow;\r\n\t\t\t}\r\n\r\n\t\t\t//\tStore the bottom of this item for the next comparison\r\n\t\t\tnextRow = item.row + item.sizey;\r\n\t\t}\r\n\r\n\t\treturn nextRow;\r\n\t}\r\n\r\n\tprivate _getNextFittingCol(newPos: NgGridItemPosition, dims: NgGridItemSize, itemsInPath: NgGridItem[]): number {\r\n\t\tlet nextCol = newPos.col;\r\n\r\n\t\tfor (const item of itemsInPath) {\r\n\t\t\t//\tWill our item fit in this row between the last item and this one?\r\n\t\t\tif (item.col - nextCol >= dims.x) {\r\n\t\t\t\treturn nextCol;\r\n\t\t\t}\r\n\r\n\t\t\t//\tStore the right of this item for the next comparison\r\n\t\t\tnextCol = item.col + item.sizex;\r\n\t\t}\r\n\r\n\t\treturn nextCol;\r\n\t}\r\n\r\n\tprivate _getItemsInHorizontalPath(pos: NgGridItemPosition, dims: NgGridItemSize, startColumn: number = 0): NgGridItem[] {\r\n\t\tconst itemsInPath: NgGridItem[] = [];\r\n\t\tconst topRow: number = pos.row + dims.y - 1;\r\n\r\n\t\tthis._itemsInGrid.forEach((itemId: string) => {\r\n\t\t\tconst item = this._items.get(itemId);\r\n\t\t\tif (item.col + item.sizex - 1 < startColumn) { return; }    //\tItem falls after start column\r\n\t\t\tif (item.row > topRow) { return; }                          //\tItem falls above path\r\n\t\t\tif (item.row + item.sizey - 1 < pos.row) { return; }        //\tItem falls below path\r\n\t\t\titemsInPath.push(item);\r\n\t\t});\r\n\r\n\t\treturn itemsInPath;\r\n\t}\r\n\r\n\tprivate _getItemsInVerticalPath(pos: NgGridItemPosition, dims: NgGridItemSize, startRow: number = 0): NgGridItem[] {\r\n\t\tconst itemsInPath: NgGridItem[] = [];\r\n\t\tconst rightCol: number = pos.col + dims.x - 1;\r\n\r\n\t\tthis._itemsInGrid.forEach((itemId: string) => {\r\n\t\t\tconst item = this._items.get(itemId);\r\n\t\t\tif (item.row + item.sizey - 1 < startRow) { return; }   //\tItem falls above start row\r\n\t\t\tif (item.col > rightCol) { return; }                    //\tItem falls after path\r\n\t\t\tif (item.col + item.sizex - 1 < pos.col) { return; }    //\tItem falls before path\r\n\t\t\titemsInPath.push(item);\r\n\t\t});\r\n\r\n\t\treturn itemsInPath;\r\n\t}\r\n\r\n\tprivate _isWithinBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\r\n\t\treturn this._maxCols === 0 || (allowExcessiveItems && pos.col === 1) || (pos.col + dims.x - 1) <= this._maxCols;\r\n\t}\r\n\r\n\tprivate _fixPosToBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\tif (!this._isWithinBoundsX(pos, dims)) {\r\n\t\t\tpos.col = Math.max(this._maxCols - (dims.x - 1), 1);\r\n\t\t\tpos.row ++;\r\n\t\t}\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tprivate _fixSizeToBoundsX(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\r\n\t\tif (!this._isWithinBoundsX(pos, dims)) {\r\n\t\t\tdims.x = Math.max(this._maxCols - (pos.col - 1), 1);\r\n\t\t\tdims.y++;\r\n\t\t}\r\n\t\treturn dims;\r\n\t}\r\n\r\n\tprivate _isWithinBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\r\n\t\treturn this._maxRows === 0 || (allowExcessiveItems && pos.row === 1) || (pos.row + dims.y - 1) <= this._maxRows;\r\n\t}\r\n\r\n\tprivate _fixPosToBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\tif (!this._isWithinBoundsY(pos, dims)) {\r\n\t\t\tpos.row = Math.max(this._maxRows - (dims.y - 1), 1);\r\n\t\t\tpos.col++;\r\n\t\t}\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tprivate _fixSizeToBoundsY(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\r\n\t\tif (!this._isWithinBoundsY(pos, dims)) {\r\n\t\t\tdims.y = Math.max(this._maxRows - (pos.row - 1), 1);\r\n\t\t\tdims.x++;\r\n\t\t}\r\n\t\treturn dims;\r\n\t}\r\n\r\n\tprivate _isWithinBounds(pos: NgGridItemPosition, dims: NgGridItemSize, allowExcessiveItems: boolean = false) {\r\n\t\treturn this._isWithinBoundsX(pos, dims, allowExcessiveItems) && this._isWithinBoundsY(pos, dims, allowExcessiveItems);\r\n\t}\r\n\r\n\tprivate _fixPosToBounds(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemPosition {\r\n\t\treturn this._fixPosToBoundsX(this._fixPosToBoundsY(pos, dims), dims);\r\n\t}\r\n\r\n\tprivate _fixSizeToBounds(pos: NgGridItemPosition, dims: NgGridItemSize): NgGridItemSize {\r\n\t\treturn this._fixSizeToBoundsX(pos, this._fixSizeToBoundsY(pos, dims));\r\n\t}\r\n\r\n\tprivate _addToGrid(item: NgGridItem): void {\r\n\t\tlet pos: NgGridItemPosition = item.getGridPosition();\r\n\t\tconst dims: NgGridItemSize = item.getSize();\r\n\r\n\t\tif (this._hasGridCollision(pos, dims)) {\r\n\t\t\tthis._fixGridCollisions(pos, dims);\r\n\t\t\tpos = item.getGridPosition();\r\n\t\t}\r\n\r\n\t\tif (this._allowOverlap) {\r\n\t\t\titem.zIndex = this._lastZValue++;\r\n\t\t}\r\n\r\n\t\tthis._itemsInGrid.add(item.uid);\r\n\t}\r\n\r\n\tprivate _removeFromGrid(item: NgGridItem): void {\r\n\t\tthis._itemsInGrid.delete(item.uid);\r\n\t}\r\n\r\n\tprivate _updateSize(): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tconst maxCol: number = this._getMaxCol();\r\n\t\tconst maxRow: number = this._getMaxRow();\r\n\r\n\t\tif (maxCol !== this._curMaxCol || maxRow !== this._curMaxRow) {\r\n\t\t\tthis._curMaxCol = maxCol;\r\n\t\t\tthis._curMaxRow = maxRow;\r\n\t\t}\r\n\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, \"width\", \"100%\"); // (maxCol * (this.colWidth + this.marginLeft + this.marginRight))+'px');\r\n\t\tif (!this._elementBasedDynamicRowHeight) {\r\n\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, \"height\", (maxRow * (this.rowHeight + this.marginTop + this.marginBottom)) + \"px\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxRow(): number {\r\n\t\tconst itemsRows: number[] = Array.from(this._itemsInGrid, (itemId: string) => {\r\n\t\t\tconst item = this._items.get(itemId);\r\n\t\t\tif (!item) return 0;\r\n\t\t\treturn item.row + item.sizey - 1;\r\n\t\t});\r\n\r\n\t\treturn Math.max.apply(null, itemsRows);\r\n\t}\r\n\r\n\tprivate _getMaxCol(): number {\r\n\t\tconst itemsCols: number[] = Array.from(this._itemsInGrid, (itemId: string) => {\r\n\t\t\tconst item = this._items.get(itemId);\r\n\t\t\tif (!item) return 0;\r\n\t\t\treturn item.col + item.sizex - 1;\r\n\t\t});\r\n\r\n\t\treturn Math.max.apply(null, itemsCols);\r\n\t}\r\n\r\n\tprivate _getMousePosition(e: any): NgGridRawPosition {\r\n\t\tif (((window as any).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\r\n\t\t\te = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\r\n\t\t}\r\n\r\n\t\tconst refPos: any = this._ngEl.nativeElement.getBoundingClientRect();\r\n\r\n\t\tlet left: number = e.clientX - refPos.left;\r\n\t\tlet top: number = e.clientY - refPos.top;\r\n\r\n\t\tif (this.cascade === \"down\") top = refPos.top + refPos.height - e.clientY;\r\n\t\tif (this.cascade === \"right\") left = refPos.left + refPos.width - e.clientX;\r\n\r\n\t\tif (this.isDragging && this._zoomOnDrag) {\r\n\t\t\tleft *= 2;\r\n\t\t\ttop *= 2;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft,\r\n\t\t\ttop,\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getAbsoluteMousePosition(e: any): NgGridRawPosition {\r\n\t\tif (((window as any).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\r\n\t\t\te = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: e.clientX,\r\n\t\t\ttop: e.clientY,\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getContainerColumns(): number {\r\n\t\tconst maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\t\tconst itemWidth: number = this.colWidth + this.marginLeft + this.marginRight;\r\n\t\treturn Math.floor(maxWidth / itemWidth);\r\n\t}\r\n\r\n\tprivate _getContainerRows(): number {\r\n\t\tconst maxHeight: number = window.innerHeight - this.marginTop - this.marginBottom;\r\n\t\treturn Math.floor(maxHeight / (this.rowHeight + this.marginTop + this.marginBottom));\r\n\t}\r\n\r\n\tprivate _getScreenMargin(): number {\r\n\t\tconst maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\t\tconst itemWidth: number = this.colWidth + this.marginLeft + this.marginRight;\r\n\t\treturn Math.floor((maxWidth - (this._maxCols * itemWidth)) / 2);\r\n\t}\r\n\r\n\tprivate _getItemFromPosition(position: NgGridRawPosition): NgGridItem {\r\n\t\treturn Array.from(this._itemsInGrid, (itemId: string) => this._items.get(itemId))\r\n\t\t\t.sort((a, b) => b.zIndex - a.zIndex)\r\n\t\t\t.find((item: NgGridItem) => {\r\n\t\t\t\tif (!item) return false;\r\n\r\n\t\t\t\tconst size: NgGridItemDimensions = item.getDimensions();\r\n\t\t\t\tconst pos: NgGridRawPosition = item.getPosition();\r\n\r\n\t\t\t\t// tslint:disable-next-line:indent\r\n\t\t\t\treturn position.left >= pos.left && position.left < (pos.left + size.width) &&\r\n\t\t\t\t\t\t\tposition.top >= pos.top && position.top < (pos.top + size.height);\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate _createPlaceholder(item: NgGridItem): void {\r\n\t\tconst pos: NgGridItemPosition = item.getGridPosition();\r\n\t\tconst dims: NgGridItemSize = item.getSize();\r\n\r\n\t\tconst factory = this.componentFactoryResolver.resolveComponentFactory(NgGridPlaceholder);\r\n\t\tconst componentRef: ComponentRef<NgGridPlaceholder> = item.containerRef.createComponent(factory);\r\n\t\tthis._placeholderRef = componentRef;\r\n\t\tconst placeholder: NgGridPlaceholder = componentRef.instance;\r\n\t\tplaceholder.registerGrid(this);\r\n\t\tplaceholder.setCascadeMode(this.cascade);\r\n\t\tplaceholder.setGridPosition({ col: pos.col, row: pos.row });\r\n\t\tplaceholder.setSize({ x: dims.x, y: dims.y });\r\n\t}\r\n\r\n\tprivate _emitOnItemChange() {\r\n\t\tconst itemOutput: any[] = Array.from(this._itemsInGrid)\r\n\t\t\t.map((itemId: string) => this._items.get(itemId))\r\n\t\t\t.filter((item: NgGridItem) => !!item)\r\n\t\t\t.map((item: NgGridItem) => item.getEventOutput());\r\n\r\n\t\tthis.onItemChange.emit(itemOutput);\r\n\t}\r\n\r\n\tprivate _defineListeners(): void {\r\n\t\tconst element = this._ngEl.nativeElement;\r\n\r\n\t\tthis._documentMousemove$ = observableFromEvent(document, \"mousemove\");\r\n\t\tthis._documentMouseup$ = observableFromEvent(document, \"mouseup\");\r\n\t\tthis._mousedown$ = observableFromEvent(element, \"mousedown\");\r\n\t\tthis._mousemove$ = observableFromEvent(element, \"mousemove\");\r\n\t\tthis._mouseup$ = observableFromEvent(element, \"mouseup\");\r\n\t\tthis._touchstart$ = observableFromEvent(element, \"touchstart\");\r\n\t\tthis._touchmove$ = observableFromEvent(element, \"touchmove\");\r\n\t\tthis._touchend$ = observableFromEvent(element, \"touchend\");\r\n\t}\r\n\r\n\tprivate _enableListeners(): void {\r\n\t\tif (this._enabledListener) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._enableMouseListeners();\r\n\r\n\t\tif (this._isTouchDevice()) {\r\n\t\t\tthis._enableTouchListeners();\r\n\t\t}\r\n\r\n\t\tthis._enabledListener = true;\r\n\t}\r\n\r\n\tprivate _disableListeners(): void {\r\n\t\tthis._subscriptions.forEach((subs: Subscription) => subs.unsubscribe());\r\n\t\tthis._enabledListener = false;\r\n\t}\r\n\r\n\tprivate _isTouchDevice(): boolean {\r\n\t\treturn \"ontouchstart\" in window || navigator.maxTouchPoints > 0;\r\n\t}\r\n\r\n\tprivate _enableTouchListeners(): void {\r\n\t\tconst touchstartSubs = this._touchstart$.subscribe((e: TouchEvent) => this.mouseDownEventHandler(e));\r\n\t\tconst touchmoveSubs = this._touchmove$.subscribe((e: TouchEvent) => this.mouseMoveEventHandler(e));\r\n\t\tconst touchendSubs = this._touchend$.subscribe((e: TouchEvent) => this.mouseUpEventHandler(e));\r\n\r\n\t\tthis._subscriptions.push(\r\n\t\t\ttouchstartSubs,\r\n\t\t\ttouchmoveSubs,\r\n\t\t\ttouchendSubs,\r\n\t\t);\r\n\t}\r\n\r\n\tprivate _enableMouseListeners(): void {\r\n\t\tconst documentMousemoveSubs = this._documentMousemove$.subscribe((e: Event) => this.mouseMoveEventHandler(e));\r\n\t\tconst documentMouseupSubs = this._documentMouseup$.subscribe((e: Event) => this.mouseUpEventHandler(e));\r\n\t\tconst mousedownSubs = this._mousedown$.subscribe((e: MouseEvent) => this.mouseDownEventHandler(e));\r\n\t\tconst mousemoveSubs = this._mousemove$.subscribe((e: MouseEvent) => this.mouseMoveEventHandler(e));\r\n\t\tconst mouseupSubs = this._mouseup$.subscribe((e: MouseEvent) => this.mouseUpEventHandler(e));\r\n\r\n\t\tthis._subscriptions.push(\r\n\t\t\tdocumentMousemoveSubs,\r\n\t\t\tdocumentMouseupSubs,\r\n\t\t\tmousedownSubs,\r\n\t\t\tmousemoveSubs,\r\n\t\t\tmouseupSubs,\r\n\t\t);\r\n\t}\r\n}\r\n"]}